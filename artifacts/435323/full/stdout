make -C tools/testing/selftests TARGETS=tc-testing run_tests
make: Entering directory '/nipa-data/kernel/tools/testing/selftests'
make[1]: Entering directory '/nipa-data/kernel/tools/testing/selftests/tc-testing'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/nipa-data/kernel/tools/testing/selftests/tc-testing'
make[1]: Entering directory '/nipa-data/kernel/tools/testing/selftests/tc-testing'
TAP version 13
1..1
# timeout set to 900
# selftests: tc-testing: tdc.sh
# netdevsim
# act_bpf
# Module act_connmark not found... skipping.
# act_csum
# Module act_ct not found... skipping.
# Module act_ctinfo not found... skipping.
# act_gact
[    1.737293] GACT probability on
# act_gate
# act_mirred
[    1.790129] Mirror/redirect action on
# act_mpls
# act_nat
# act_pedit
# act_police
# act_sample
# act_simple
[    1.942794] Simple TC action Loaded
# act_skbedit
# act_skbmod
# act_tunnel_key
# act_vlan
# cls_basic
# cls_bpf
# cls_cgroup
# cls_flow
# cls_flower
# cls_fw
# cls_matchall
# cls_route
# cls_u32
[    2.273253] u32 classifier
[    2.273584]     Performance counters on
[    2.274015]     input device check on
[    2.274425]     Actions configured
# em_canid
# em_cmp
# Module em_ipset not found... skipping.
# Module em_ipt not found... skipping.
# em_meta
# em_nbyte
# em_text
# em_u32
# sch_cake
# sch_cbs
# sch_choke
# sch_codel
# sch_drr
# sch_etf
# sch_ets
# sch_fq
# sch_fq_codel
# sch_fq_pie
# sch_gred
# sch_hfsc
# sch_hhf
# sch_htb
# sch_teql
# considering category actions
#  -- scapy/SubPlugin.__init__
#  -- ns/SubPlugin.__init__
# Executing 520 tests in parallel and 15 in serial
# Using 18 batches and 4 workers
[    4.137275] tc (573) used greatest stack depth: 11448 bytes left
[    4.239074] tc[605]: segfault at b79b4f75 ip 00007f06c7352a6d sp 00007ffdb79a7b98 error 4 in ld-musl-x86_64.so.1[7f06c730e000+54000] likely on CPU 22 (core 22, socket 0)
[    4.241466] Code: fa 75 e6 48 83 c0 01 c3 31 c0 c3 48 89 f9 40 0f b6 f6 eb 08 48 83 c1 01 48 83 ea 01 f6 c1 07 74 12 48 85 d2 0f 84 ac 00 00 00 <0f> b6 01 39 f0 75 e3 eb 09 48 85 d2 0f 84 9a 00 00 00 0f b6 01 39
# 
# -----> teardown stage *** Could not execute: "$TC action flush action ctinfo"
# 
# -----> teardown stage *** Error message: "Error: Cannot flush unknown TC action.
# We have an error flushing
# "
# 
# -----> teardown stage *** Aborting test run.
# 
# 
# <_io.BufferedReader name=6> *** stdout ***
# 
# 
# <_io.BufferedReader name=15> *** stderr ***
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 536, in test_runner
#     res = run_one_test(pm, args, index, tidx)
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 465, in run_one_test
#     prepare_env(tidx, args, pm, 'teardown', '-----> teardown stage', tidx['teardown'], procout)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 268, in prepare_env
#     raise PluginMgrTestFail(
[    5.238945] tc (959) used greatest stack depth: 11176 bytes left
# 
# -----> teardown stage *** Could not execute: "$TC actions flush action connmark"
# 
# -----> teardown stage *** Error message: "Error: Cannot flush unknown TC action.
# We have an error flushing
# "
# 
# -----> teardown stage *** Aborting test run.
# 
# 
# <_io.BufferedReader name=6> *** stdout ***
# 
# 
# <_io.BufferedReader name=21> *** stderr ***
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 536, in test_runner
#     res = run_one_test(pm, args, index, tidx)
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 465, in run_one_test
#     prepare_env(tidx, args, pm, 'teardown', '-----> teardown stage', tidx['teardown'], procout)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 268, in prepare_env
#     raise PluginMgrTestFail(
# Test 2893: Add pedit action with RAW_OP offset u8 quad
# Test 6795: Add pedit action with LAYERED_OP ip6 set payload_len, nexthdr, hoplimit
# Test cfcc: Add pedit action with LAYERED_OP tcp flags set
# Test d959: Add cBPF action with valid bytecode
# Test f84a: Add cBPF action with invalid bytecode
# Test e939: Add eBPF action with valid object-file
# exit: -11
# exit: 0
# 
# Test 282d: Add eBPF action with invalid object-file
# Test d819: Replace cBPF bytecode and action control
# Test 6ae3: Delete cBPF action 
# Test 3e0d: List cBPF actions
# Test 55ce: Flush BPF actions
# Test ccc3: Add cBPF action with duplicate index
# Test 89c7: Add cBPF action with invalid index
# Test 7ab9: Add cBPF action with cookie
# Test b8a1: Replace bpf action with invalid goto_chain control
# Test c826: Add ctinfo action with default setting
# exit: 255
# exit: 0
# Error: Failed to load TC action module.
# We have an error talking to the kernel
# 
# returncode 1; expected [0]
# "-----> teardown stage" did not complete successfully
# Exception <class '__main__.PluginMgrTestFail'> ('teardown', 'Error: Failed to load TC action module.\nWe have an error talking to the kernel\n', '"-----> teardown stage" did not complete successfully') (caught in test_runner, running test 2 c826 Add ctinfo action with default setting stage teardown)
# ---------------
# traceback
# ---------------
# accumulated output for this test:
# Error: Failed to load TC action module.
# We have an error talking to the kernel
# 
# ---------------
# Test c8cf: Add skbedit action with 32-bit maximum mark
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test 22be: Add action with index at 32-bit maximum
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test a0e2: Replace ife encode action with invalid goto chain control
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test 3f66: Add mirred mirror action with index exceeding 32-bit maximum
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test a68a: Verify cleanup of failed actions batch change
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test b80f: Add mpls mod action with mpls max ttl
# Test 8864: Add mpls mod action with mpls min ttl
# Test 6c06: Add mpls mod action with mpls ttl of 0 (invalid)
# Test b5d8: Add mpls mod action with mpls ttl exceeding max (invalid)
# Test 451f: Add mpls mod action with mpls max bos
# Test a1ed: Add mpls mod action with mpls min bos
# Test 3dcf: Add mpls mod action with mpls bos exceeding max (invalid)
# Test db7c: Add mpls mod action with protocol (invalid)
# Test b070: Replace existing mpls push action with new ID
# Test 95a9: Replace existing mpls push action with new label, tc, ttl and cookie
# Test 6cce: Delete mpls pop action
# Test d138: Flush mpls actions
# Test 6f5a: Add vlan pop action with pipe opcode
# Test df35: Add vlan pop action with pass opcode
# Test b0d4: Add vlan pop action with drop opcode
# Test 95ee: Add vlan pop action with reclassify opcode
# Test 0283: Add vlan pop action with continue opcode
# Test b6b9: Add vlan pop action with jump opcode
# Test 87c3: Add vlan pop action with trap opcode
# Test a178: Add vlan pop action with invalid opcode
# Test ee6f: Add vlan pop action with index at 32-bit maximum
# Test 0dfa: Add vlan pop action with index exceeding 32-bit maximum
# Test 2b91: Add vlan invalid action
# Test 57fc: Add vlan push action with invalid protocol type
# Test 3989: Add vlan push action with default protocol and priority
# Test 79dc: Add vlan push action with protocol 802.1Q and priority 3
# Test 4d73: Add vlan push action with protocol 802.1AD
# Test 1f4b: Add vlan push action with maximum 12-bit vlan ID
# Test 1f7b: Add vlan push action with invalid vlan ID
# Test fe40: Add vlan push action with maximum 3-bit IEEE 802.1p priority
# Test 5d02: Add vlan push action with invalid IEEE 802.1p priority
# Test ba5b: Add vlan modify action for protocol 802.1Q setting priority 0
# Test 6812: Add vlan modify action for protocol 802.1Q
# Test 5a31: Add vlan modify action for protocol 802.1AD
# Test 3deb: Replace existing vlan push action with new ID
# Test 9e76: Replace existing vlan push action with new protocol
# Test ede4: Replace existing vlan push action with new priority
# Test d413: Replace existing vlan pop action with new cookie
# Test 83a4: Delete vlan pop action
# Test ed1e: Delete vlan push action for protocol 802.1Q
# Test a2a3: Flush vlan actions
# Test 1d78: Add vlan push action with cookie
# Test e394: Replace vlan push action with invalid goto chain control
# Test 294e: Add batch of 32 vlan push actions with cookie
# Test 56f7: Delete batch of 32 vlan push actions
# Test 759f: Add batch of 32 vlan pop actions with cookie
# Test c84a: Delete batch of 32 vlan pop actions
# Test 1a3d: Add vlan pop action with no_percpu flag
# Test 2002: Add valid connmark action with defaults
# exit: 255
# exit: 0
# Error: Failed to load TC action module.
# We have an error talking to the kernel
# 
# returncode 1; expected [0]
# "-----> teardown stage" did not complete successfully
# Exception <class '__main__.PluginMgrTestFail'> ('teardown', 'Error: Failed to load TC action module.\nWe have an error talking to the kernel\n', '"-----> teardown stage" did not complete successfully') (caught in test_runner, running test 18 2002 Add valid connmark action with defaults stage teardown)
# ---------------
# traceback
# ---------------
# accumulated output for this test:
# Error: Failed to load TC action module.
# We have an error talking to the kernel
# 
# ---------------
# Test 6d84: Add csum iph action
# Test 1862: Add csum ip4h action
# Test 15c6: Add csum ipv4h action
# Test bf47: Add csum icmp action
# Test cc1d: Add csum igmp action
# Test bccc: Add csum foobar action
# Test 3bb4: Add csum tcp action
# Test 759c: Add csum udp action
# Test bdb6: Add csum udp xor iph action
# Test c220: Add csum udplite action
# Test 8993: Add csum sctp action
# Test b138: Add csum ip & icmp action
# Test eeda: Add csum ip & sctp action
# Test 0017: Add csum udp or tcp action
# Test b10b: Add all 7 csum actions
# Test ce92: Add csum udp action with cookie
# Test 912f: Add csum icmp action with large cookie
# Test 879b: Add batch of 32 csum tcp actions
# Test b4e9: Delete batch of 32 csum actions
# Test 0015: Add batch of 32 csum tcp actions with large cookies
# Test 989e: Delete batch of 32 csum actions with large cookies
# Test d128: Replace csum action with invalid goto chain control
# Test eaf0: Add csum iph action with no_percpu flag
# Test a933: Add MPLS dec_ttl action with pipe opcode
# Test 08d1: Add mpls dec_ttl action with pass opcode
# Test d786: Add mpls dec_ttl action with drop opcode
# Test f334: Add mpls dec_ttl action with reclassify opcode
# Test 29bd: Add mpls dec_ttl action with continue opcode
# Test 48df: Add mpls dec_ttl action with jump opcode
# Test 62eb: Add mpls dec_ttl action with trap opcode
# Test 09d2: Add mpls dec_ttl action with opcode and cookie
# Test c170: Add mpls dec_ttl action with opcode and cookie of max length
# Test 9118: Add mpls dec_ttl action with invalid opcode
# Test 6ce1: Add mpls dec_ttl action with label (invalid)
# Test 352f: Add mpls dec_ttl action with tc (invalid)
# Test fa1c: Add mpls dec_ttl action with ttl (invalid)
# Test 6b79: Add mpls dec_ttl action with bos (invalid)
# Test d4c4: Add mpls pop action with ip proto
# Test 91fb: Add mpls pop action with ip proto and cookie
# Test 92fe: Add mpls pop action with mpls proto
# Test 7e23: Add mpls pop action with no protocol (invalid)
# Test 6182: Add mpls pop action with label (invalid)
# Test 6475: Add mpls pop action with tc (invalid)
# Test 067b: Add mpls pop action with ttl (invalid)
# Test 7316: Add mpls pop action with bos (invalid)
# Test 38cc: Add mpls push action with label
# Test c281: Add mpls push action with mpls_mc protocol
# Test 5db4: Add mpls push action with label, tc and ttl
# Test 7c34: Add mpls push action with label, tc ttl and cookie of max length
# Test 16eb: Add mpls push action with label and bos
# Test d69d: Add mpls push action with no label (invalid)
# Test e8e4: Add mpls push action with ipv4 protocol (invalid)
# Test ecd0: Add mpls push action with out of range label (invalid)
# Test d303: Add mpls push action with out of range tc (invalid)
# Test fd6e: Add mpls push action with ttl of 0 (invalid)
# Test 19e9: Add mpls mod action with mpls label
# Test 1fde: Add mpls mod action with max mpls label
# Test 0c50: Add mpls mod action with mpls label exceeding max (invalid)
# Test 10b6: Add mpls mod action with mpls label of MPLS_LABEL_IMPLNULL (invalid)
# Test 57c9: Add mpls mod action with mpls min tc
# Test 6872: Add mpls mod action with mpls max tc
# Test a70a: Add mpls mod action with mpls tc exceeding max (invalid)
# Test 6ed5: Add mpls mod action with mpls ttl
# Test 77c1: Add mpls mod action with mpls ttl and cookie
# Test 99e0: Add pedit action with RAW_OP offset u16 preserve value
# Test 1892: Add pedit action with RAW_OP offset u32 preserve value
# Test 4b60: Add pedit action with RAW_OP negative offset u16/u32 set value
# Test a5a7: Add pedit action with LAYERED_OP eth set src
# Test 86d4: Add pedit action with LAYERED_OP eth set src & dst
# Test f8a9: Add pedit action with LAYERED_OP eth set dst
# Test c715: Add pedit action with LAYERED_OP eth set src (INVALID)
# Test 8131: Add pedit action with LAYERED_OP eth set dst (INVALID)
# Test ba22: Add pedit action with LAYERED_OP eth type set/clear sequence
# Test dec4: Add pedit action with LAYERED_OP eth set type (INVALID)
# Test ab06: Add pedit action with LAYERED_OP eth add type
# Test 918d: Add pedit action with LAYERED_OP eth invert src
# Test a8d4: Add pedit action with LAYERED_OP eth invert dst
# Test ee13: Add pedit action with LAYERED_OP eth invert type
# Test 7588: Add pedit action with LAYERED_OP ip set src
# Test 0fa7: Add pedit action with LAYERED_OP ip set dst
# Test 5810: Add pedit action with LAYERED_OP ip set src & dst
# Test 1092: Add pedit action with LAYERED_OP ip set ihl & dsfield
# Test 02d8: Add pedit action with LAYERED_OP ip set ttl & protocol
# Test 3e2d: Add pedit action with LAYERED_OP ip set ttl (INVALID)
# Test 31ae: Add pedit action with LAYERED_OP ip ttl clear/set
# Test 486f: Add pedit action with LAYERED_OP ip set duplicate fields
# Test e790: Add pedit action with LAYERED_OP ip set ce, df, mf, firstfrag, nofrag fields
# Test cc8a: Add pedit action with LAYERED_OP ip set tos
# Test 7a17: Add pedit action with LAYERED_OP ip set precedence
# Test c3b6: Add pedit action with LAYERED_OP ip add tos
# Test 43d3: Add pedit action with LAYERED_OP ip add precedence
# Test 438e: Add pedit action with LAYERED_OP ip clear tos
# Test 6b1b: Add pedit action with LAYERED_OP ip clear precedence
# Test 824a: Add pedit action with LAYERED_OP ip invert tos
# Test 106f: Add pedit action with LAYERED_OP ip invert precedence
# Test 6829: Add pedit action with LAYERED_OP beyond ip set dport & sport
# Test afd8: Add pedit action with LAYERED_OP beyond ip set icmp_type & icmp_code
# Test 3143: Add pedit action with LAYERED_OP beyond ip set dport (INVALID)
# Test 815c: Add pedit action with LAYERED_OP ip6 set src
# Test 4dae: Add pedit action with LAYERED_OP ip6 set dst
# Test fc1f: Add pedit action with LAYERED_OP ip6 set src & dst
# Test 6d34: Add pedit action with LAYERED_OP ip6 dst retain value (INVALID)
# Test 94bb: Add pedit action with LAYERED_OP ip6 traffic_class
# Test 6f5e: Add pedit action with LAYERED_OP ip6 flow_lbl
# Test 1442: Add pedit action with LAYERED_OP tcp set dport & sport
# Test b7ac: Add pedit action with LAYERED_OP tcp sport set (INVALID)
# Test 3bc4: Add pedit action with LAYERED_OP tcp set dport, sport & flags fields
# Test f1c8: Add pedit action with LAYERED_OP udp set dport & sport
# Test d784: Add pedit action with mixed RAW/LAYERED_OP #1
# Test 70ca: Add pedit action with mixed RAW/LAYERED_OP #2
# Test 7d50: Add skbmod action to set destination mac
# Test 9b29: Add skbmod action to set source mac
# Test 1724: Add skbmod action with invalid mac
# Test 3cf1: Add skbmod action with valid etype
# Test a749: Add skbmod action with invalid etype
# Test bfe6: Add skbmod action to swap mac
# Test 839b: Add skbmod action with control pipe
# Test c167: Add skbmod action with control reclassify
# Test 0c2f: Add skbmod action with control drop
# Test d113: Add skbmod action with control continue
# Test 7242: Add skbmod action with control pass
# Test 6046: Add skbmod action with control reclassify and cookie
# Test 58cb: List skbmod actions
# Test 9aa8: Get a single skbmod action from a list
# Test e93a: Delete an skbmod action
# Test 40c2: Flush skbmod actions
# Test b651: Replace skbmod action with invalid goto_chain control
# Test fe09: Add skbmod action to mark ECN bits
# multiprocessing.pool.RemoteTraceback: 
# """
# Traceback (most recent call last):
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 142, in call_pre_case
#     pgn_inst.pre_case(caseinfo, test_skip)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py", line 63, in pre_case
#     self.prepare_test(test)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py", line 36, in prepare_test
#     self._nl_ns_create()
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py", line 130, in _nl_ns_create
#     ip.link('add', ifname=dev1, kind='veth', peer={'ifname': dev0, 'net_ns_fd':'/proc/1/ns/net'})
#   File "/usr/lib/python3.11/site-packages/pyroute2/iproute/linux.py", line 1672, in link
#     ret = self.nlm_request(msg, msg_type=msg_type, msg_flags=msg_flags)
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 870, in nlm_request
#     return tuple(self._genlm_request(*argv, **kwarg))
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 1214, in nlm_request
#     for msg in self.get(
#                ^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 873, in get
#     return tuple(self._genlm_get(*argv, **kwarg))
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 550, in get
#     raise msg['header']['error']
# pyroute2.netlink.exceptions.NetlinkError: (34, 'Result not representable')
# 
# During handling of the above exception, another exception occurred:
# 
# Traceback (most recent call last):
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 125, in worker
#     result = (True, func(*args, **kwds))
#                     ^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 48, in mapstar
#     return list(map(*args))
#            ^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 602, in __mp_runner
#     (_, tsr) = test_runner(mp_pm, mp_args, tests)
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 536, in test_runner
#     res = run_one_test(pm, args, index, tidx)
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 419, in run_one_test
#     pm.call_pre_case(tidx)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 146, in call_pre_case
#     print('test_ordinal is {}'.format(test_ordinal))
#                                       ^^^^^^^^^^^^
# NameError: name 'test_ordinal' is not defined
# """
# 
# The above exception was the direct cause of the following exception:
# 
# Traceback (most recent call last):
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 1028, in <module>
#     main()
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 1022, in main
#     set_operation_mode(pm, parser, args, remaining)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 964, in set_operation_mode
#     catresults = test_runner_mp(pm, args, alltests)
#                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 624, in test_runner_mp
#     pres = p.map(__mp_runner, batches)
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 367, in map
#     return self._map_async(func, iterable, mapstar, chunksize).get()
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 774, in get
#     raise self._value
# NameError: name 'test_ordinal' is not defined
# considering category qdisc
#  -- scapy/SubPlugin.__init__
#  -- ns/SubPlugin.__init__
# Executing 294 tests in parallel and 33 in serial
# Using 11 batches and 4 workers
[    9.450627] netem: version 1.3
[    9.625919] sch_tbf: burst 1500 is lower than device dummy1id6430 mtu (1514) !
[    9.680304] sch_tbf: burst 1500 is lower than device dummy1id0518 mtu (1514) !
[    9.739091] sch_tbf: burst 1500 is lower than device dummy1id320a mtu (1514) !
[    9.797524] sch_tbf: burst 1500 is lower than device dummy1id239b mtu (1514) !
[    9.860466] sch_tbf: burst 1500 is lower than device dummy1idc975 mtu (1514) !
[    9.921550] sch_tbf: burst 1500 is lower than device dummy1id948c mtu (1514) !
[    9.984595] sch_tbf: burst 1500 is lower than device dummy1id3549 mtu (1514) !
[    9.998705] sch_tbf: burst 1500 is lower than device dummy1id3549 mtu (1514) !
[   10.061223] sch_tbf: burst 1500 is lower than device dummy1idf948 mtu (1514) !
[   10.074953] sch_tbf: burst 1500 is lower than device dummy1idf948 mtu (1514) !
[   10.399815] tc[1894]: segfault at 0 ip 00007f02702f8ce3 sp 00007ffe6490bf00 error 4 in ld-musl-x86_64.so.1[7f02702b9000+54000] likely on CPU 21 (core 21, socket 0)
[   10.401769] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[   11.021934] tc[2067]: segfault at 0 ip 00007f19686fbce3 sp 00007ffc9e7c7930 error 4 in ld-musl-x86_64.so.1[7f19686bc000+54000] likely on CPU 13 (core 13, socket 0)
[   11.024510] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[   11.085086] tc[2084]: segfault at 0 ip 00007fb92fc94ce3 sp 00007ffea1b9eba0 error 4 in ld-musl-x86_64.so.1[7fb92fc55000+54000] likely on CPU 19 (core 19, socket 0)
[   11.087304] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[   11.144211] tc[2098]: segfault at 0 ip 00007f4d48609ce3 sp 00007ffc9c7107c0 error 4 in ld-musl-x86_64.so.1[7f4d485ca000+54000] likely on CPU 14 (core 14, socket 0)
[   11.146464] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[   11.203798] tc[2116]: segfault at 0 ip 00007f8159639ce3 sp 00007fffe01eb0e0 error 4 in ld-musl-x86_64.so.1[7f81595fa000+54000] likely on CPU 13 (core 13, socket 0)
[   11.206344] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[   11.262647] tc[2129]: segfault at 0 ip 00007fdb3cbd0ce3 sp 00007fff2d49fd80 error 4 in ld-musl-x86_64.so.1[7fdb3cb91000+54000] likely on CPU 15 (core 15, socket 0)
[   11.264698] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[   11.306669] tc[2144]: segfault at 0 ip 00007f86bd4bfce3 sp 00007ffea4e303a0 error 4 in ld-musl-x86_64.so.1[7f86bd480000+54000] likely on CPU 25 (core 25, socket 0)
[   11.308491] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[   11.323422] tc[2147]: segfault at 0 ip 00007f53d4524ce3 sp 00007ffee1f92d40 error 4 in ld-musl-x86_64.so.1[7f53d44e5000+54000] likely on CPU 17 (core 17, socket 0)
[   11.325275] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
# 
# -----> teardown stage *** Could not execute: "$TC qdisc del dev $DUMMY handle 1: root"
# 
# -----> teardown stage *** Error message: "Error: Invalid handle.
# "
# 
# -----> teardown stage *** Aborting test run.
# 
# 
# <_io.BufferedReader name=6> *** stdout ***
# 
# 
# <_io.BufferedReader name=17> *** stderr ***
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 536, in test_runner
#     res = run_one_test(pm, args, index, tidx)
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 465, in run_one_test
#     prepare_env(tidx, args, pm, 'teardown', '-----> teardown stage', tidx['teardown'], procout)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 268, in prepare_env
#     raise PluginMgrTestFail(
# Test 8436: Show HFSC class
# Test bef4: HFSC rt inner class upgrade to sc
# Test 83be: Create FQ-PIE with invalid number of flows
# Test 6430: Create TBF with default setting
# Test 0518: Create TBF with mtu setting
# Test 320a: Create TBF with peakrate setting
# Test 239b: Create TBF with latency setting
# Test c975: Create TBF with overhead setting
# Test 948c: Create TBF with linklayer setting
# Test 3549: Replace TBF with mtu
# Test f948: Change TBF with latency time
# Test 2348: Show TBF class
# Test 4812: Create HHF with default setting
# Test 8a92: Create HHF with limit setting
# Test 3491: Create HHF with quantum setting
# Test ba04: Create HHF with reset_timeout setting
# Test 4238: Create HHF with admit_bytes setting
# Test 839f: Create HHF with evict_timeout setting
# Test a044: Create HHF with non_hh_weight setting
# Test 32f9: Change HHF with limit setting
# Test 385e: Show HHF class
# Test 900c: Create pfifo_fast with default setting
# Test 7470: Dump pfifo_fast stats
# Test b974: Replace pfifo_fast with different handle
# Test 3240: Delete pfifo_fast with valid handle
# Test 4385: Delete pfifo_fast with invalid handle
# Test 8b6e: Create RED with no flags
# Test 342e: Create RED with adaptive flag
# Test 2d4b: Create RED with ECN flag
# Test 650f: Create RED with flags ECN, adaptive
# Test 5f15: Create RED with flags ECN, harddrop
# Test 53e8: Create RED with flags ECN, nodrop
# Test f7c8: Add ETS qdisc with too many quanta
# Test 2389: Add ETS qdisc with too many strict
# Test fe3c: Add ETS qdisc with too many strict + quanta
# Test cb04: Add ETS qdisc with excess priomap elements
# Test c32e: Add ETS qdisc with priomap above bands
# Test 744c: Add ETS qdisc with priomap above quanta
# Test 7b33: Add ETS qdisc with priomap above strict
# Test dbe6: Add ETS qdisc with priomap above strict + quanta
# Test bdb2: Add ETS qdisc with priomap within bands with strict + quanta
# Test 39a3: Add ETS qdisc with priomap above bands with strict + quanta
# Test 557c: Unset priorities default to the last band
# Test a347: Unset priorities default to the last band -- no priomap
# Test 39c4: Add ETS qdisc with too few bands
# Test 930b: Add ETS qdisc with too many bands
# Test 406a: Add ETS qdisc without parameters
# Test e51a: Zero element in quanta
# Test e7f2: Sole zero element in quanta
# Test d6e6: No values after the quanta keyword
# Test 28c6: Change ETS band quantum
# Test 4714: Change ETS band without quantum
# Test 6979: Change quantum of a strict ETS band
# Test 9a7d: Change ETS strict band without quantum
# Test 0582: Create QFQ with default setting
# Test c9a3: Create QFQ with class weight setting
# Test d364: Test QFQ with max class weight setting
# Test 8452: Create QFQ with class maxpkt setting
# Test 22df: Test QFQ class maxpkt setting lower bound
# Test 92ee: Test QFQ class maxpkt setting upper bound
# Test d920: Create QFQ with multiple class setting
# Test 0548: Delete QFQ with handle
# Test 5901: Show QFQ class
# Test 85ee: QFQ with big MTU
# Test cb28: Create NETEM with default setting
# Test a089: Create NETEM with limit flag
# Test 3449: Create NETEM with delay time
# Test 3782: Create NETEM with distribution and corrupt flag
# Test 2b82: Create NETEM with distribution and duplicate flag
# Test a932: Create NETEM with distribution and loss flag
# Test e01a: Create NETEM with distribution and loss state flag
# Test ba29: Create NETEM with loss gemodel flag
# Test 0492: Create NETEM with reorder flag
# Test 7862: Create NETEM with rate limit
# Test 7235: Create NETEM with multiple slot rate
# Test 5439: Create NETEM with multiple slot setting
# Test 5029: Change NETEM with loss state
# Test 3785: Replace NETEM with delay time
# Test 4502: Delete NETEM with handle
# Test 0785: Show NETEM class
# Test 983b: Create FQ with default setting
# Test 38a1: Create FQ with limit packet setting
# Test 0a18: Create FQ with flow_limit setting
# Test 2390: Create FQ with quantum setting
# Test 845b: Create FQ with initial_quantum setting
# Test 10f7: Create FQ with invalid initial_quantum setting
# Test 9398: Create FQ with maxrate setting
# Test 342c: Create FQ with nopacing setting
# Test 6391: Create FQ with refill_delay setting
# Test 238b: Create FQ with low_rate_threshold setting
# Test 7582: Create FQ with orphan_mask setting
# Test 4894: Create FQ with timer_slack setting
# Test 324c: Create FQ with ce_threshold setting
# Test 424a: Create FQ with horizon time setting
# Test 89e1: Create FQ with horizon_cap setting
# Test 32e1: Delete FQ with valid handle
# Test d091: Fail to create RED with only nodrop flag
# Test af8e: Create RED with flags ECN, nodrop, harddrop
# Test 290a: Show RED class
# Test 4957: Create FQ_CODEL with default setting
# Test 7621: Create FQ_CODEL with limit setting
# Test 6871: Create FQ_CODEL with memory_limit setting
# Test 5636: Create FQ_CODEL with target setting
# Test 630a: Create FQ_CODEL with interval setting
# Test 4324: Create FQ_CODEL with quantum setting
# Test b190: Create FQ_CODEL with noecn flag
# Test 5381: Create FQ_CODEL with ce_threshold setting
# Test c9d2: Create FQ_CODEL with drop_batch setting
# Test 523b: Create FQ_CODEL with multiple setting
# Test 9283: Replace FQ_CODEL with noecn setting
# Test 3459: Change FQ_CODEL with limit setting
# Test 0128: Delete FQ_CODEL with handle
# Test 0435: Show FQ_CODEL class
# Test 1212: Create CAKE with default setting
# Test 3281: Create CAKE with bandwidth limit
# Test c940: Create CAKE with autorate-ingress flag
# Test 2310: Create CAKE with rtt time
# Test 2385: Create CAKE with besteffort flag
# Test a032: Create CAKE with diffserv8 flag
# Test 2349: Create CAKE with diffserv4 flag
# Test 8472: Create CAKE with flowblind flag
# Test 2341: Create CAKE with dsthost and nat flag
# exit: 2
# exit: 0
# Error: No conntrack support in kernel.
# 
# returncode 2; expected [0]
# "-----> teardown stage" did not complete successfully
# Exception <class '__main__.PluginMgrTestFail'> ('teardown', 'Error: No conntrack support in kernel.\n', '"-----> teardown stage" did not complete successfully') (caught in test_runner, running test 27 2341 Create CAKE with dsthost and nat flag stage teardown)
# ---------------
# traceback
# ---------------
# accumulated output for this test:
# Error: No conntrack support in kernel.
# 
# ---------------
# Test ddfa: QFQ with small MTU
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test 38aa: Create CODEL with limit packet setting
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test 8492: Create HTB with r2q setting
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test 30a9: Create SFB with increment setting
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# multiprocessing.pool.RemoteTraceback: 
# """
# Traceback (most recent call last):
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 142, in call_pre_case
#     pgn_inst.pre_case(caseinfo, test_skip)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py", line 63, in pre_case
#     self.prepare_test(test)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py", line 36, in prepare_test
#     self._nl_ns_create()
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py", line 130, in _nl_ns_create
#     ip.link('add', ifname=dev1, kind='veth', peer={'ifname': dev0, 'net_ns_fd':'/proc/1/ns/net'})
#   File "/usr/lib/python3.11/site-packages/pyroute2/iproute/linux.py", line 1672, in link
#     ret = self.nlm_request(msg, msg_type=msg_type, msg_flags=msg_flags)
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 870, in nlm_request
#     return tuple(self._genlm_request(*argv, **kwarg))
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 1214, in nlm_request
#     for msg in self.get(
#                ^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 873, in get
#     return tuple(self._genlm_get(*argv, **kwarg))
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 550, in get
#     raise msg['header']['error']
# pyroute2.netlink.exceptions.NetlinkError: (34, 'Result not representable')
# 
# During handling of the above exception, another exception occurred:
# 
# Traceback (most recent call last):
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 125, in worker
#     result = (True, func(*args, **kwds))
#                     ^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 48, in mapstar
#     return list(map(*args))
#            ^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 602, in __mp_runner
#     (_, tsr) = test_runner(mp_pm, mp_args, tests)
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 536, in test_runner
#     res = run_one_test(pm, args, index, tidx)
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 419, in run_one_test
#     pm.call_pre_case(tidx)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 146, in call_pre_case
#     print('test_ordinal is {}'.format(test_ordinal))
#                                       ^^^^^^^^^^^^
# NameError: name 'test_ordinal' is not defined
# """
# 
# The above exception was the direct cause of the following exception:
# 
# Traceback (most recent call last):
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 1028, in <module>
#     main()
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 1022, in main
#     set_operation_mode(pm, parser, args, remaining)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 964, in set_operation_mode
#     catresults = test_runner_mp(pm, args, alltests)
#                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 624, in test_runner_mp
#     pres = p.map(__mp_runner, batches)
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 367, in map
#     return self._map_async(func, iterable, mapstar, chunksize).get()
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 774, in get
#     raise self._value
# NameError: name 'test_ordinal' is not defined
not ok 1 selftests: tc-testing: tdc.sh # exit=1
make[1]: Leaving directory '/nipa-data/kernel/tools/testing/selftests/tc-testing'
make: Leaving directory '/nipa-data/kernel/tools/testing/selftests'
xx__-> echo $?
0
xx__-> 