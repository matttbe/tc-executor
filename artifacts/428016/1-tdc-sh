make -C tools/testing/selftests TARGETS=tc-testing run_tests
make: Entering directory '/nipa-data/kernel/tools/testing/selftests'
make[1]: Entering directory '/nipa-data/kernel/tools/testing/selftests/tc-testing'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/nipa-data/kernel/tools/testing/selftests/tc-testing'
make[1]: Entering directory '/nipa-data/kernel/tools/testing/selftests/tc-testing'
TAP version 13
1..1
# timeout set to 900
# selftests: tc-testing: tdc.sh
[   19.663758] random: crng init done
# netdevsim
# act_bpf
# act_connmark
# act_csum
# act_ct
# act_ctinfo
# act_gact
[   23.367670] GACT probability on
# act_gate
# act_mirred
[   24.672654] Mirror/redirect action on
# act_mpls
# act_nat
# act_pedit
[   25.864486] hrtimer: interrupt took 4425820 ns
# act_police
# act_sample
# act_simple
[   27.830766] Simple TC action Loaded
# act_skbedit
# act_skbmod
# act_tunnel_key
# act_vlan
# cls_basic
# cls_bpf
# cls_cgroup
# cls_flow
# cls_flower
# cls_fw
# cls_matchall
# cls_route
# cls_u32
[   40.667000] u32 classifier
[   40.667393]     Performance counters on
[   40.667562]     input device check on
[   40.667721]     Actions configured
# em_canid
# em_cmp
# Module em_ipset not found... skipping.
# em_ipt
# em_meta
# em_nbyte
# em_text
# em_u32
# sch_cake
# sch_cbs
# sch_choke
# sch_codel
# sch_drr
# sch_etf
# sch_ets
# sch_fq
# sch_fq_codel
# sch_fq_pie
# sch_gred
# sch_hfsc
# sch_hhf
# sch_htb
# sch_teql
# considering category actions
#  -- scapy/SubPlugin.__init__
#  -- ns/SubPlugin.__init__
# Executing 520 tests in parallel and 15 in serial
# Using 18 batches and 4 workers
[   82.307788] tc (682) used greatest stack depth: 11824 bytes left
[   83.467886] tc[717]: segfault at 8c8cbf86 ip 00007f52b4184a6d sp 00007ffc8c8beb38 error 4 in ld-musl-x86_64.so.1[7f52b4140000+54000] likely on CPU 11 (core 11, socket 0)
[   83.469586] Code: fa 75 e6 48 83 c0 01 c3 31 c0 c3 48 89 f9 40 0f b6 f6 eb 08 48 83 c1 01 48 83 ea 01 f6 c1 07 74 12 48 85 d2 0f 84 ac 00 00 00 <0f> b6 01 39 f0 75 e3 eb 09 48 85 d2 0f 84 9a 00 00 00 0f b6 01 39
[   84.752601] tc (764) used greatest stack depth: 11448 bytes left
[  232.801473] v0p0id3992: entered promiscuous mode
# WARNING: No route found (no default route?)
# WARNING: No route found (no default route?)
# .[  233.062989] v0p0id3992: left promiscuous mode
[  233.095100] v0p0id3992: entered promiscuous mode
WARNING: more No route found (no default route?)
# .[  233.250886] v0p0id3992: left promiscuous mode
Test d959: Add cBPF action with valid bytecode
# Test f84a: Add cBPF action with invalid bytecode
# Test e939: Add eBPF action with valid object-file
# exit: -11
# exit: 0
# 
# Test 282d: Add eBPF action with invalid object-file
# Test d819: Replace cBPF bytecode and action control
# Test 6ae3: Delete cBPF action 
# Test 3e0d: List cBPF actions
# Test 55ce: Flush BPF actions
# Test ccc3: Add cBPF action with duplicate index
# Test 89c7: Add cBPF action with invalid index
# Test 7ab9: Add cBPF action with cookie
# Test b8a1: Replace bpf action with invalid goto_chain control
# Test 2893: Add pedit action with RAW_OP offset u8 quad
# Test 6795: Add pedit action with LAYERED_OP ip6 set payload_len, nexthdr, hoplimit
# Test cfcc: Add pedit action with LAYERED_OP tcp flags set
# Test 7d50: Add skbmod action to set destination mac
# Test 9b29: Add skbmod action to set source mac
# Test 1724: Add skbmod action with invalid mac
# Test 3cf1: Add skbmod action with valid etype
# Test a749: Add skbmod action with invalid etype
# Test bfe6: Add skbmod action to swap mac
# Test 839b: Add skbmod action with control pipe
# Test c167: Add skbmod action with control reclassify
# Test 0c2f: Add skbmod action with control drop
# Test d113: Add skbmod action with control continue
# Test 7242: Add skbmod action with control pass
# Test 6046: Add skbmod action with control reclassify and cookie
# Test 58cb: List skbmod actions
# Test 9aa8: Get a single skbmod action from a list
# Test e93a: Delete an skbmod action
# Test 40c2: Flush skbmod actions
# Test b651: Replace skbmod action with invalid goto_chain control
# Test fe09: Add skbmod action to mark ECN bits
# Test b078: Add simple action
# Test 4297: Add simple action with change command
# Test 6d4c: Add simple action with duplicate index
# Test 2542: List simple actions
# Test ea67: Delete simple action
# Test 8ff1: Flush simple actions
# Test b776: Replace simple action with invalid goto chain control
# Test 8d07: Verify cleanup of failed actions batch add
# Test a68a: Verify cleanup of failed actions batch change
# Test c826: Add ctinfo action with default setting
# Test 0286: Add ctinfo action with dscp
# Test 4938: Add ctinfo action with valid cpmark and zone
# Test 7593: Add ctinfo action with drop control
# Test 2961: Replace ctinfo action zone and action control
# Test 704a: Replace existing sample action with new rate argument
# Test 60eb: Replace existing sample action with new group argument
# Test 2cce: Replace existing sample action with new trunc argument
# Test 59d1: Replace existing sample action with new control argument
# Test 0a6e: Replace sample action with invalid goto chain control
# Test 3872: Delete sample action with valid index
# Test a394: Delete sample action with invalid index
# Test 6f5a: Add vlan pop action with pipe opcode
# Test df35: Add vlan pop action with pass opcode
# Test b0d4: Add vlan pop action with drop opcode
# Test 95ee: Add vlan pop action with reclassify opcode
# Test 0283: Add vlan pop action with continue opcode
# Test b6b9: Add vlan pop action with jump opcode
# Test 87c3: Add vlan pop action with trap opcode
# Test a178: Add vlan pop action with invalid opcode
# Test ee6f: Add vlan pop action with index at 32-bit maximum
# Test 0dfa: Add vlan pop action with index exceeding 32-bit maximum
# Test 2b91: Add vlan invalid action
# Test 57fc: Add vlan push action with invalid protocol type
# Test 3989: Add vlan push action with default protocol and priority
# Test 79dc: Add vlan push action with protocol 802.1Q and priority 3
# Test 4d73: Add vlan push action with protocol 802.1AD
# Test 1f4b: Add vlan push action with maximum 12-bit vlan ID
# Test 1f7b: Add vlan push action with invalid vlan ID
# Test fe40: Add vlan push action with maximum 3-bit IEEE 802.1p priority
# Test 5d02: Add vlan push action with invalid IEEE 802.1p priority
# Test ba5b: Add vlan modify action for protocol 802.1Q setting priority 0
# Test 6812: Add vlan modify action for protocol 802.1Q
# Test 5a31: Add vlan modify action for protocol 802.1AD
# Test 3deb: Replace existing vlan push action with new ID
# Test 9e76: Replace existing vlan push action with new protocol
# Test ede4: Replace existing vlan push action with new priority
# Test d413: Replace existing vlan pop action with new cookie
# Test 83a4: Delete vlan pop action
# Test ed1e: Delete vlan push action for protocol 802.1Q
# Test a2a3: Flush vlan actions
# Test 1d78: Add vlan push action with cookie
# Test e394: Replace vlan push action with invalid goto chain control
# Test 294e: Add batch of 32 vlan push actions with cookie
# Test 56f7: Delete batch of 32 vlan push actions
# Test 759f: Add batch of 32 vlan pop actions with cookie
# Test c84a: Delete batch of 32 vlan pop actions
# Test 1a3d: Add vlan pop action with no_percpu flag
# Test 696a: Add simple ct action
# Test e38c: Add simple ct action with cookie
# Test 9f20: Add ct clear action
# Test 0bc1: Add ct clear action with cookie of max length
# Test 5bea: Try ct with zone
# Test d5d6: Try ct with zone, commit
# Test 029f: Try ct with zone, commit, mark
# Test a58d: Try ct with zone, commit, mark, nat
# Test 901b: Try ct with full nat ipv4 range syntax
# Test 072b: Try ct with full nat ipv6 syntax
# Test 3420: Try ct with full nat ipv6 range syntax
# Test 4470: Try ct with full nat ipv6 range syntax + force
# Test 5d88: Try ct with label
# Test 04d4: Try ct with label with mask
# Test 9751: Try ct with mark + mask
# Test 2faa: Try ct with mark + mask and cookie
# Test 3991: Add simple ct action with no_percpu flag
# Test 3992: Add ct action triggering DNAT tuple conflict
# 
# Sent 1 packets.
# 
# Sent 1 packets.
# Test 49aa: Add valid basic police action
# Test 3abe: Add police action with duplicate index
# Test 49fa: Add valid police action with mtu
# Test a521: Delete nat action with invalid index
# Test 2b11: Add tunnel_key set action with mandatory parameters
# Test dc6b: Add tunnel_key set action with missing mandatory src_ip parameter
# Test 7f25: Add tunnel_key set action with missing mandatory dst_ip parameter
# Test a5e0: Add tunnel_key set action with invalid src_ip parameter
# Test eaa8: Add tunnel_key set action with invalid dst_ip parameter
# Test 3b09: Add tunnel_key set action with invalid id parameter
# Test 9625: Add tunnel_key set action with invalid dst_port parameter
# Test 05af: Add tunnel_key set action with optional dst_port parameter
# Test da80: Add tunnel_key set action with index at 32-bit maximum
# Test d407: Add tunnel_key set action with index exceeding 32-bit maximum
# Test 5cba: Add tunnel_key set action with id value at 32-bit maximum
# Test e84a: Add tunnel_key set action with id value exceeding 32-bit maximum
# Test 9c19: Add tunnel_key set action with dst_port value at 16-bit maximum
# Test 3bd9: Add tunnel_key set action with dst_port value exceeding 16-bit maximum
# Test 68e2: Add tunnel_key unset action
# Test 6192: Add tunnel_key unset continue action
# Test 061d: Add tunnel_key set continue action with cookie
# Test 8acb: Add tunnel_key set continue action with invalid cookie
# Test a07e: Add tunnel_key action with no set/unset command specified
# Test b227: Add tunnel_key action with csum option
# Test 58a7: Add tunnel_key action with nocsum option
# Test 2575: Add tunnel_key action with not-supported parameter
# Test 7a88: Add tunnel_key action with cookie parameter
# Test 4f20: Add tunnel_key action with a single geneve option parameter
# Test e33d: Add tunnel_key action with multiple geneve options parameter
# Test 0778: Add tunnel_key action with invalid class geneve option parameter
# Test 4ae8: Add tunnel_key action with invalid type geneve option parameter
# Test 4039: Add tunnel_key action with short data length geneve option parameter
# Test 26a6: Add tunnel_key action with non-multiple of 4 data length geneve option parameter
# Test f44d: Add tunnel_key action with incomplete geneve options parameter
# Test 7afc: Replace tunnel_key set action with all parameters
# Test 364d: Replace tunnel_key set action with all parameters and cookie
# Test 937c: Fetch all existing tunnel_key actions
# Test 6783: Flush all existing tunnel_key actions
# Test 8242: Replace tunnel_key set action with invalid goto chain
# Test 0cd2: Add tunnel_key set action with no_percpu flag
# Test 3671: Delete tunnel_key set action with valid index
# Test 8597: Delete tunnel_key set action with invalid index
# Test 2d89: Add mirred action with invalid device
# Test 300b: Add mirred action with duplicate index
# Test 8917: Add mirred mirror action with control pass
# Test 1054: Add mirred mirror action with control pipe
# Test 9887: Add mirred mirror action with control continue
# Test e4aa: Add mirred mirror action with control reclassify
# Test ece9: Add mirred mirror action with control drop
# Test 0031: Add mirred mirror action with control jump
# Test 407c: Add mirred mirror action with cookie
# Test 8b69: Add mirred mirror action with index at 32-bit maximum
# Test 3f66: Add mirred mirror action with index exceeding 32-bit maximum
# Test a70e: Delete mirred mirror action
# Test 3fb3: Delete mirred redirect action
# Test 2a9a: Replace mirred action with invalid goto chain control
# Test 4749: Add batch of 32 mirred redirect egress actions with cookie
# Test 5c69: Delete batch of 32 mirred redirect egress actions
# Test d3c0: Add batch of 32 mirred mirror ingress actions with cookie
# Test e684: Delete batch of 32 mirred mirror ingress actions
# Test 31e3: Add mirred mirror to egress action with no_percpu flag
# Test 6d84: Add csum iph action
# Test 1862: Add csum ip4h action
# Test 15c6: Add csum ipv4h action
# Test bf47: Add csum icmp action
# Test cc1d: Add csum igmp action
# Test bccc: Add csum foobar action
# Test 3bb4: Add csum tcp action
# Test 759c: Add csum udp action
# Test bdb6: Add csum udp xor iph action
# Test c220: Add csum udplite action
# Test 8993: Add csum sctp action
# Test b138: Add csum ip & icmp action
# Test eeda: Add csum ip & sctp action
# Test 0017: Add csum udp or tcp action
# Test b10b: Add all 7 csum actions
# Test ce92: Add csum udp action with cookie
# Test 912f: Add csum icmp action with large cookie
# Test 879b: Add batch of 32 csum tcp actions
# Test b4e9: Delete batch of 32 csum actions
# Test 0015: Add batch of 32 csum tcp actions with large cookies
# Test 989e: Delete batch of 32 csum actions with large cookies
# Test d128: Replace csum action with invalid goto chain control
# Test eaf0: Add csum iph action with no_percpu flag
# Test 9784: Add valid sample action with mandatory arguments
# Test 5c91: Add valid sample action with mandatory arguments and continue control action
# Test 334b: Add valid sample action with mandatory arguments and drop control action
# Test da69: Add valid sample action with mandatory arguments and reclassify control action
# Test 13ce: Add valid sample action with mandatory arguments and pipe control action
# Test 1886: Add valid sample action with mandatory arguments and jump control action
# Test 7571: Add sample action with invalid rate
# Test b6d4: Add sample action with mandatory arguments and invalid control action
# Test a874: Add invalid sample action without mandatory arguments
# Test ac01: Add invalid sample action without mandatory argument rate
# Test 4203: Add invalid sample action without mandatory argument group
# Test 14a7: Add invalid sample action without mandatory argument group
# Test 8f2e: Add valid sample action with trunc argument
# Test 45f8: Add sample action with maximum rate argument
# Test ad0c: Add sample action with maximum trunc argument
# Test 83a9: Add sample action with maximum group argument
# Test ed27: Add sample action with invalid rate argument
# Test 2eae: Add sample action with invalid group argument
# Test 6ff3: Add sample action with invalid trunc size
# Test 2b2a: Add sample action with invalid index
# Test dee2: Add sample action with maximum allowed index
# Test 560e: Add sample action with cookie
# Test ee13: Add pedit action with LAYERED_OP eth invert type
# Test 7588: Add pedit action with LAYERED_OP ip set src
# Test 0fa7: Add pedit action with LAYERED_OP ip set dst
# Test 5810: Add pedit action with LAYERED_OP ip set src & dst
# Test 1092: Add pedit action with LAYERED_OP ip set ihl & dsfield
# Test 02d8: Add pedit action with LAYERED_OP ip set ttl & protocol
# Test 3e2d: Add pedit action with LAYERED_OP ip set ttl (INVALID)
# Test 31ae: Add pedit action with LAYERED_OP ip ttl clear/set
# Test 486f: Add pedit action with LAYERED_OP ip set duplicate fields
# Test e790: Add pedit action with LAYERED_OP ip set ce, df, mf, firstfrag, nofrag fields
# Test cc8a: Add pedit action with LAYERED_OP ip set tos
# Test 7a17: Add pedit action with LAYERED_OP ip set precedence
# Test c3b6: Add pedit action with LAYERED_OP ip add tos
# Test 43d3: Add pedit action with LAYERED_OP ip add precedence
# Test 438e: Add pedit action with LAYERED_OP ip clear tos
# Test 6b1b: Add pedit action with LAYERED_OP ip clear precedence
# Test 824a: Add pedit action with LAYERED_OP ip invert tos
# Test 106f: Add pedit action with LAYERED_OP ip invert precedence
# Test 6829: Add pedit action with LAYERED_OP beyond ip set dport & sport
# Test afd8: Add pedit action with LAYERED_OP beyond ip set icmp_type & icmp_code
# Test 3143: Add pedit action with LAYERED_OP beyond ip set dport (INVALID)
# Test 815c: Add pedit action with LAYERED_OP ip6 set src
# Test 4dae: Add pedit action with LAYERED_OP ip6 set dst
# Test fc1f: Add pedit action with LAYERED_OP ip6 set src & dst
# Test 6d34: Add pedit action with LAYERED_OP ip6 dst retain value (INVALID)
# Test 94bb: Add pedit action with LAYERED_OP ip6 traffic_class
# Test 6f5e: Add pedit action with LAYERED_OP ip6 flow_lbl
# Test 1442: Add pedit action with LAYERED_OP tcp set dport & sport
# Test b7ac: Add pedit action with LAYERED_OP tcp sport set (INVALID)
# Test 3bc4: Add pedit action with LAYERED_OP tcp set dport, sport & flags fields
# Test f1c8: Add pedit action with LAYERED_OP udp set dport & sport
# Test d784: Add pedit action with mixed RAW/LAYERED_OP #1
# Test 70ca: Add pedit action with mixed RAW/LAYERED_OP #2
# Test 6236: Add skbedit action with valid mark
# Test c8cf: Add skbedit action with 32-bit maximum mark
# Test 407b: Add skbedit action with mark exceeding 32-bit maximum
# Test d4cd: Add skbedit action with valid mark and mask
# Test baa7: Add skbedit action with valid mark and 32-bit maximum mask
# Test 62a5: Add skbedit action with valid mark and mask exceeding 32-bit maximum
# Test bc15: Add skbedit action with valid mark and mask with invalid format
# Test 57c2: Replace skbedit action with new mask
# Test 081d: Add skbedit action with priority
# Test cc37: Add skbedit action with invalid priority
# Test 3c95: Add skbedit action with queue_mapping
# Test 985c: Add skbedit action with queue_mapping exceeding 16-bit maximum
# Test 224f: Add skbedit action with ptype host
# Test d1a3: Add skbedit action with ptype otherhost
# Test b9c6: Add skbedit action with invalid ptype
# Test 464a: Add skbedit action with control pipe
# Test 212f: Add skbedit action with control reclassify
# Test 0651: Add skbedit action with control pass
# Test cc53: Add skbedit action with control drop
# Test ec16: Add skbedit action with control jump
# Test db54: Add skbedit action with control continue
# Test 1055: Add skbedit action with cookie
# Test 5172: List skbedit actions
# Test a6d6: Add skbedit action with index at 32-bit maximum
# Test f0f4: Add skbedit action with index exceeding 32-bit maximum
# Test 38f3: Delete skbedit action
# Test ce97: Flush skbedit actions
# Test 1b2b: Replace skbedit action with invalid goto_chain control
# Test 630c: Add batch of 32 skbedit actions with all parameters and cookie
# Test 706d: Delete batch of 32 skbedit actions with all parameters
# Test 5153: Add gate action with priority and sched-entry
# Test e567: Delete ctinfo action with valid index
# Test 6a91: Delete ctinfo action with invalid index
# Test 5232: List ctinfo actions
# Test 7702: Flush ctinfo actions
# Test 3201: Add ctinfo action with duplicate index
# Test 8295: Add ctinfo action with invalid index
# Test 3964: Replace ctinfo action with invalid goto_chain control
# Test a933: Add MPLS dec_ttl action with pipe opcode
# Test 08d1: Add mpls dec_ttl action with pass opcode
# Test d786: Add mpls dec_ttl action with drop opcode
# Test f334: Add mpls dec_ttl action with reclassify opcode
# Test 29bd: Add mpls dec_ttl action with continue opcode
# Test 48df: Add mpls dec_ttl action with jump opcode
# Test 62eb: Add mpls dec_ttl action with trap opcode
# Test 09d2: Add mpls dec_ttl action with opcode and cookie
# Test c170: Add mpls dec_ttl action with opcode and cookie of max length
# Test 9118: Add mpls dec_ttl action with invalid opcode
# Test 6ce1: Add mpls dec_ttl action with label (invalid)
# Test 352f: Add mpls dec_ttl action with tc (invalid)
# Test fa1c: Add mpls dec_ttl action with ttl (invalid)
# Test 6b79: Add mpls dec_ttl action with bos (invalid)
# Test d4c4: Add mpls pop action with ip proto
# Test 91fb: Add mpls pop action with ip proto and cookie
# Test 92fe: Add mpls pop action with mpls proto
# Test 7e23: Add mpls pop action with no protocol (invalid)
# Test 6182: Add mpls pop action with label (invalid)
# Test 6475: Add mpls pop action with tc (invalid)
# Test 067b: Add mpls pop action with ttl (invalid)
# Test 7316: Add mpls pop action with bos (invalid)
# Test 38cc: Add mpls push action with label
# Test c281: Add mpls push action with mpls_mc protocol
# Test 5db4: Add mpls push action with label, tc and ttl
# Test 7c34: Add mpls push action with label, tc ttl and cookie of max length
# Test 16eb: Add mpls push action with label and bos
# Test d69d: Add mpls push action with no label (invalid)
# Test e8e4: Add mpls push action with ipv4 protocol (invalid)
# Test ecd0: Add mpls push action with out of range label (invalid)
# Test d303: Add mpls push action with out of range tc (invalid)
# Test fd6e: Add mpls push action with ttl of 0 (invalid)
# Test 19e9: Add mpls mod action with mpls label
# Test 1fde: Add mpls mod action with max mpls label
# Test 0c50: Add mpls mod action with mpls label exceeding max (invalid)
# Test 10b6: Add mpls mod action with mpls label of MPLS_LABEL_IMPLNULL (invalid)
# Test 57c9: Add mpls mod action with mpls min tc
# Test 6872: Add mpls mod action with mpls max tc
# Test a70a: Add mpls mod action with mpls tc exceeding max (invalid)
# Test 6ed5: Add mpls mod action with mpls ttl
# Test 77c1: Add mpls mod action with mpls ttl and cookie
# Test b80f: Add mpls mod action with mpls max ttl
# Test 8864: Add mpls mod action with mpls min ttl
# Test 6c06: Add mpls mod action with mpls ttl of 0 (invalid)
# Test b5d8: Add mpls mod action with mpls ttl exceeding max (invalid)
# Test 451f: Add mpls mod action with mpls max bos
# Test a1ed: Add mpls mod action with mpls min bos
# Test 3dcf: Add mpls mod action with mpls bos exceeding max (invalid)
# Test db7c: Add mpls mod action with protocol (invalid)
# Test b070: Replace existing mpls push action with new ID
# Test 95a9: Replace existing mpls push action with new label, tc, ttl and cookie
# Test 6cce: Delete mpls pop action
# Test d138: Flush mpls actions
# Test 2002: Add valid connmark action with defaults
# Test 56a5: Add valid connmark action with control pass
# Test 7c66: Add valid connmark action with control drop
# Test a913: Add valid connmark action with control pipe
# Test 7943: Add valid police action with peakrate
# Test 055e: Add police action with peakrate and no mtu
# Test f057: Add police action with valid overhead
# Test 7ffb: Add police action with ethernet linklayer type
# Test 3dda: Add police action with atm linklayer type
# Test 551b: Add police actions with conform-exceed control continue/drop
# Test 0c70: Add police actions with conform-exceed control pass/reclassify
# Test d946: Add police actions with conform-exceed control pass/pipe
# Test ddd6: Add police action with invalid rate value
# Test f61c: Add police action with invalid burst value
# Test 6aaf: Add police actions with conform-exceed control pass/pipe [with numeric values]
# Test 29b1: Add police actions with conform-exceed control <invalid>/drop
# Test c26f: Add police action with invalid peakrate value
# Test db04: Add police action with invalid mtu value
# Test f3c9: Add police action with cookie
# Test d190: Add police action with maximum index
# Test 336e: Delete police action
# Test 77fa: Get single police action from many actions
# Test aa43: Get single police action without specifying index
# Test 858b: List police actions
# Test 1c3a: Flush police actions
# Test 7326: Add police action with control continue
# Test 34fa: Add police action with control drop
# Test 8dd5: Add police action with control ok
# Test b9d1: Add police action with control reclassify
# Test c534: Add police action with control pipe
# Test b48b: Add police action with exceed goto chain control action
# Test 689e: Replace police action with invalid goto chain control
# Test cdd7: Add valid police action with packets per second rate limit
# Test f5bc: Add invalid police action with both bps and pps
# Test 7d64: Add police action with skip_hw option
# Test 319a: Add pedit action that mangles IP TTL
# Test 7e67: Replace pedit action with invalid goto chain
# Test 377e: Add pedit action with RAW_OP offset u32
# Test a0ca: Add pedit action with RAW_OP offset u32 (INVALID)
# Test dd8a: Add pedit action with RAW_OP offset u16 u16
# Test 53db: Add pedit action with RAW_OP offset u16 (INVALID)
# Test 5c7e: Add pedit action with RAW_OP offset u8 add value
# Test 3a07: Add pedit action with RAW_OP offset u8-u16-u8
# Test ab0f: Add pedit action with RAW_OP offset u16-u8-u8
# Test 9d12: Add pedit action with RAW_OP offset u32 set u16 clear u8 invert
# Test ebfa: Add pedit action with RAW_OP offset overflow u32 (INVALID)
# Test f512: Add pedit action with RAW_OP offset u16 at offmask shift set
# Test c2cb: Add pedit action with RAW_OP offset u32 retain value
# Test 1762: Add pedit action with RAW_OP offset u8 clear value
# Test bcee: Add pedit action with RAW_OP offset u8 retain value
# Test e89f: Add pedit action with RAW_OP offset u16 retain value
# Test c282: Add pedit action with RAW_OP offset u32 clear value
# Test c422: Add pedit action with RAW_OP offset u16 invert value
# Test d3d3: Add pedit action with RAW_OP offset u32 invert value
# Test 57e5: Add pedit action with RAW_OP offset u8 preserve value
# Test 99e0: Add pedit action with RAW_OP offset u16 preserve value
# Test 1892: Add pedit action with RAW_OP offset u32 preserve value
# Test 4b60: Add pedit action with RAW_OP negative offset u16/u32 set value
# Test a5a7: Add pedit action with LAYERED_OP eth set src
# Test 86d4: Add pedit action with LAYERED_OP eth set src & dst
# Test f8a9: Add pedit action with LAYERED_OP eth set dst
# Test c715: Add pedit action with LAYERED_OP eth set src (INVALID)
# Test 8131: Add pedit action with LAYERED_OP eth set dst (INVALID)
# Test ba22: Add pedit action with LAYERED_OP eth type set/clear sequence
# Test dec4: Add pedit action with LAYERED_OP eth set type (INVALID)
# Test ab06: Add pedit action with LAYERED_OP eth add type
# Test 918d: Add pedit action with LAYERED_OP eth invert src
# Test a8d4: Add pedit action with LAYERED_OP eth invert dst
# Test bdd8: Add valid connmark action with control reclassify
# Test b8be: Add valid connmark action with control continue
# Test d8a6: Add valid connmark action with control jump
# Test aae8: Add valid connmark action with zone argument
# Test 2f0b: Add valid connmark action with invalid zone argument
# Test 9305: Add connmark action with unsupported argument
# Test 71ca: Add valid connmark action and replace it
# Test 5f8f: Add valid connmark action with cookie
# Test c506: Replace connmark with invalid goto chain control
# Test 6571: Delete connmark action with valid index
# Test 3426: Delete connmark action with invalid index
# Test 7682: Create valid ife encode action with mark and pass control
# Test ef47: Create valid ife encode action with mark and pipe control
# Test df43: Create valid ife encode action with mark and continue control
# Test e4cf: Create valid ife encode action with mark and drop control
# Test ccba: Create valid ife encode action with mark and reclassify control
# Test a1cf: Create valid ife encode action with mark and jump control
# Test cb3d: Create valid ife encode action with mark value at 32-bit maximum
# Test 1efb: Create ife encode action with mark value exceeding 32-bit maximum
# Test 95ed: Create valid ife encode action with prio and pass control
# Test aa17: Create valid ife encode action with prio and pipe control
# Test 74c7: Create valid ife encode action with prio and continue control
# Test 7a97: Create valid ife encode action with prio and drop control
# Test f66b: Create valid ife encode action with prio and reclassify control
# Test 3056: Create valid ife encode action with prio and jump control
# Test 7dd3: Create valid ife encode action with prio value at 32-bit maximum
# Test 2ca1: Create ife encode action with prio value exceeding 32-bit maximum
# Test 05bb: Create valid ife encode action with tcindex and pass control
# Test ce65: Create valid ife encode action with tcindex and pipe control
# Test 09cd: Create valid ife encode action with tcindex and continue control
# Test 8eb5: Create valid ife encode action with tcindex and continue control
# Test 451a: Create valid ife encode action with tcindex and drop control
# Test d76c: Create valid ife encode action with tcindex and reclassify control
# Test e731: Create valid ife encode action with tcindex and jump control
# Test b7b8: Create valid ife encode action with tcindex value at 16-bit maximum
# Test d0d8: Create ife encode action with tcindex value exceeding 16-bit maximum
# Test 2a9c: Create valid ife encode action with mac src parameter
# Test cf5c: Create valid ife encode action with mac dst parameter
# Test 2353: Create valid ife encode action with mac src and mac dst parameters
# Test 552c: Create valid ife encode action with mark and type parameters
# Test 0421: Create valid ife encode action with prio and type parameters
# Test 4017: Create valid ife encode action with tcindex and type parameters
# Test fac3: Create valid ife encode action with index at 32-bit maximum
# Test 7c25: Create valid ife decode action with pass control
# Test dccb: Create valid ife decode action with pipe control
# Test 7bb9: Create valid ife decode action with continue control
# Test d9ad: Create valid ife decode action with drop control
# Test 219f: Create valid ife decode action with reclassify control
# Test 8f44: Create valid ife decode action with jump control
# Test 56cf: Create ife encode action with index exceeding 32-bit maximum
# Test ee94: Create ife encode action with invalid control
# Test b330: Create ife encode action with cookie
# Test bbc0: Create ife encode action with invalid argument
# Test d54a: Create ife encode action with invalid type argument
# Test 7ee0: Create ife encode action with invalid mac src argument
# Test 0a7d: Create ife encode action with invalid mac dst argument
# Test a0e2: Replace ife encode action with invalid goto chain control
# Test a972: Delete ife encode action with valid index
# Test 1272: Delete ife encode action with invalid index
# Test 5124: Add mirred mirror to egress action
# Test 6fb4: Add mirred redirect to egress action
# Test ba38: Get mirred actions
# Test d7c0: Add invalid mirred direction
# Test e213: Add invalid mirred action
# Test 7189: Add gate action with base-time
# Test a721: Add gate action with cycle-time
# Test c029: Add gate action with cycle-time-ext
# Test 3719: Replace gate base-time action
# Test d821: Delete gate action with valid index
# Test 3128: Delete gate action with invalid index
# Test 7837: List gate actions
# Test 9273: Flush gate actions
# Test c829: Add gate action with duplicate index
# Test 3043: Add gate action with invalid index
# Test 2930: Add gate action with cookie
# Test e89a: Add valid pass action
# Test a02c: Add valid pipe action
# Test feef: Add valid reclassify action
# Test 8a7a: Add valid drop action
# Test 9a52: Add valid continue action
# Test d700: Add invalid action
# Test 9215: Add action with duplicate index
# Test 798e: Add action with index exceeding 32-bit maximum
# Test 22be: Add action with index at 32-bit maximum
# Test ac2a: List actions
# Test 3edf: Flush gact actions
# Test 63ec: Delete pass action
# Test 46be: Delete pipe action
# Test 2e08: Delete reclassify action
# Test 99c4: Delete drop action
# Test fb6b: Delete continue action
# Test 0eb3: Delete non-existent action
# Test f02c: Replace gact action
# Test 525f: Get gact action by index
# Test 1021: Add batch of 32 gact pass actions
# Test da7a: Add batch of 32 gact continue actions with cookie
# Test 8aa3: Delete batch of 32 gact continue actions
# Test 8e47: Add gact action with random determ goto chain control action
# Test ca89: Replace gact action with invalid goto chain control
# Test 95ad: Add gact pass action with no_percpu flag
# Test 7f52: Try to flush action which is referenced by filter
# Test ae1e: Try to flush actions when last one is referenced by filter
# Test 7565: Add nat action on ingress with default control action
# Test fd79: Add nat action on ingress with pipe control action
# Test eab9: Add nat action on ingress with continue control action
# Test c53a: Add nat action on ingress with reclassify control action
# Test 76c9: Add nat action on ingress with jump control action
# Test 24c6: Add nat action on ingress with drop control action
# Test 2120: Add nat action on ingress with maximum index value
# Test 3e9d: Add nat action on ingress with invalid index value
# Test f6c9: Add nat action on ingress with invalid IP address
# Test be25: Add nat action on ingress with invalid argument
# Test a7bd: Add nat action on ingress with DEFAULT IP address
# Test ee1e: Add nat action on ingress with ANY IP address
# Test 1de8: Add nat action on ingress with ALL IP address
# Test 8dba: Add nat action on egress with default control action
# Test 19a7: Add nat action on egress with pipe control action
# Test f1d9: Add nat action on egress with continue control action
# Test 6d4a: Add nat action on egress with reclassify control action
# Test b313: Add nat action on egress with jump control action
# Test d9fc: Add nat action on egress with drop control action
# Test a895: Add nat action on egress with DEFAULT IP address
# Test 2572: Add nat action on egress with ANY IP address
# Test 37f3: Add nat action on egress with ALL IP address
# Test 6054: Add nat action on egress with cookie
# Test 79d6: Add nat action on ingress with cookie
# Test 4b12: Replace nat action with invalid goto chain control
# Test b811: Delete nat action with valid index
# Test 6bda: Add tunnel_key action with nofrag option
# 
# All test results: 
# 
# 1..535
# ok 1 d959 - Add cBPF action with valid bytecode
# ok 2 f84a - Add cBPF action with invalid bytecode
# not ok 3 e939 - Add eBPF action with valid object-file
# Command exited with -11, expected 0
# 
# ok 4 282d - Add eBPF action with invalid object-file
# ok 5 d819 - Replace cBPF bytecode and action control
# ok 6 6ae3 - Delete cBPF action 
# ok 7 3e0d - List cBPF actions
# ok 8 55ce - Flush BPF actions
# ok 9 ccc3 - Add cBPF action with duplicate index
# ok 10 89c7 - Add cBPF action with invalid index
# ok 11 7ab9 - Add cBPF action with cookie
# ok 12 b8a1 - Replace bpf action with invalid goto_chain control
# ok 13 2893 - Add pedit action with RAW_OP offset u8 quad
# ok 14 6795 - Add pedit action with LAYERED_OP ip6 set payload_len, nexthdr, hoplimit
# ok 15 cfcc - Add pedit action with LAYERED_OP tcp flags set
# ok 16 7d50 - Add skbmod action to set destination mac
# ok 17 9b29 - Add skbmod action to set source mac
# ok 18 1724 - Add skbmod action with invalid mac
# ok 19 3cf1 - Add skbmod action with valid etype
# ok 20 a749 - Add skbmod action with invalid etype
# ok 21 bfe6 - Add skbmod action to swap mac
# ok 22 839b - Add skbmod action with control pipe
# ok 23 c167 - Add skbmod action with control reclassify
# ok 24 0c2f - Add skbmod action with control drop
# ok 25 d113 - Add skbmod action with control continue
# ok 26 7242 - Add skbmod action with control pass
# ok 27 6046 - Add skbmod action with control reclassify and cookie
# ok 28 58cb - List skbmod actions
# ok 29 9aa8 - Get a single skbmod action from a list
# ok 30 e93a - Delete an skbmod action
# ok 31 40c2 - Flush skbmod actions
# ok 32 b651 - Replace skbmod action with invalid goto_chain control
# ok 33 fe09 - Add skbmod action to mark ECN bits
# ok 34 b078 - Add simple action
# ok 35 4297 - Add simple action with change command
# ok 36 6d4c - Add simple action with duplicate index
# ok 37 2542 - List simple actions
# ok 38 ea67 - Delete simple action
# ok 39 8ff1 - Flush simple actions
# ok 40 b776 - Replace simple action with invalid goto chain control
# ok 41 8d07 - Verify cleanup of failed actions batch add
# ok 42 a68a - Verify cleanup of failed actions batch change
# ok 43 c826 - Add ctinfo action with default setting
# ok 44 0286 - Add ctinfo action with dscp
# ok 45 4938 - Add ctinfo action with valid cpmark and zone
# ok 46 7593 - Add ctinfo action with drop control
# ok 47 2961 - Replace ctinfo action zone and action control
# ok 48 e567 - Delete ctinfo action with valid index
# ok 49 6a91 - Delete ctinfo action with invalid index
# ok 50 5232 - List ctinfo actions
# ok 51 7702 - Flush ctinfo actions
# ok 52 3201 - Add ctinfo action with duplicate index
# ok 53 8295 - Add ctinfo action with invalid index
# ok 54 3964 - Replace ctinfo action with invalid goto_chain control
# ok 55 a933 - Add MPLS dec_ttl action with pipe opcode
# ok 56 08d1 - Add mpls dec_ttl action with pass opcode
# ok 57 d786 - Add mpls dec_ttl action with drop opcode
# ok 58 f334 - Add mpls dec_ttl action with reclassify opcode
# ok 59 29bd - Add mpls dec_ttl action with continue opcode
# ok 60 48df - Add mpls dec_ttl action with jump opcode
# ok 61 62eb - Add mpls dec_ttl action with trap opcode
# ok 62 09d2 - Add mpls dec_ttl action with opcode and cookie
# ok 63 c170 - Add mpls dec_ttl action with opcode and cookie of max length
# ok 64 9118 - Add mpls dec_ttl action with invalid opcode
# ok 65 6ce1 - Add mpls dec_ttl action with label (invalid)
# ok 66 352f - Add mpls dec_ttl action with tc (invalid)
# ok 67 fa1c - Add mpls dec_ttl action with ttl (invalid)
# ok 68 6b79 - Add mpls dec_ttl action with bos (invalid)
# ok 69 d4c4 - Add mpls pop action with ip proto
# ok 70 91fb - Add mpls pop action with ip proto and cookie
# ok 71 92fe - Add mpls pop action with mpls proto
# ok 72 7e23 - Add mpls pop action with no protocol (invalid)
# ok 73 6182 - Add mpls pop action with label (invalid)
# ok 74 6475 - Add mpls pop action with tc (invalid)
# ok 75 067b - Add mpls pop action with ttl (invalid)
# ok 76 7316 - Add mpls pop action with bos (invalid)
# ok 77 38cc - Add mpls push action with label
# ok 78 c281 - Add mpls push action with mpls_mc protocol
# ok 79 5db4 - Add mpls push action with label, tc and ttl
# ok 80 7c34 - Add mpls push action with label, tc ttl and cookie of max length
# ok 81 16eb - Add mpls push action with label and bos
# ok 82 d69d - Add mpls push action with no label (invalid)
# ok 83 e8e4 - Add mpls push action with ipv4 protocol (invalid)
# ok 84 ecd0 - Add mpls push action with out of range label (invalid)
# ok 85 d303 - Add mpls push action with out of range tc (invalid)
# ok 86 fd6e - Add mpls push action with ttl of 0 (invalid)
# ok 87 19e9 - Add mpls mod action with mpls label
# ok 88 1fde - Add mpls mod action with max mpls label
# ok 89 0c50 - Add mpls mod action with mpls label exceeding max (invalid)
# ok 90 10b6 - Add mpls mod action with mpls label of MPLS_LABEL_IMPLNULL (invalid)
# ok 91 57c9 - Add mpls mod action with mpls min tc
# ok 92 6872 - Add mpls mod action with mpls max tc
# ok 93 a70a - Add mpls mod action with mpls tc exceeding max (invalid)
# ok 94 6ed5 - Add mpls mod action with mpls ttl
# ok 95 77c1 - Add mpls mod action with mpls ttl and cookie
# ok 96 b80f - Add mpls mod action with mpls max ttl
# ok 97 8864 - Add mpls mod action with mpls min ttl
# ok 98 6c06 - Add mpls mod action with mpls ttl of 0 (invalid)
# ok 99 b5d8 - Add mpls mod action with mpls ttl exceeding max (invalid)
# ok 100 451f - Add mpls mod action with mpls max bos
# ok 101 a1ed - Add mpls mod action with mpls min bos
# ok 102 3dcf - Add mpls mod action with mpls bos exceeding max (invalid)
# ok 103 db7c - Add mpls mod action with protocol (invalid)
# ok 104 b070 - Replace existing mpls push action with new ID
# ok 105 95a9 - Replace existing mpls push action with new label, tc, ttl and cookie
# ok 106 6cce - Delete mpls pop action
# ok 107 d138 - Flush mpls actions
# ok 108 2002 - Add valid connmark action with defaults
# ok 109 56a5 - Add valid connmark action with control pass
# ok 110 7c66 - Add valid connmark action with control drop
# ok 111 a913 - Add valid connmark action with control pipe
# ok 112 bdd8 - Add valid connmark action with control reclassify
# ok 113 b8be - Add valid connmark action with control continue
# ok 114 d8a6 - Add valid connmark action with control jump
# ok 115 aae8 - Add valid connmark action with zone argument
# ok 116 2f0b - Add valid connmark action with invalid zone argument
# ok 117 9305 - Add connmark action with unsupported argument
# ok 118 71ca - Add valid connmark action and replace it
# ok 119 5f8f - Add valid connmark action with cookie
# ok 120 c506 - Replace connmark with invalid goto chain control
# ok 121 6571 - Delete connmark action with valid index
# ok 122 3426 - Delete connmark action with invalid index
# ok 123 7682 - Create valid ife encode action with mark and pass control
# ok 124 ef47 - Create valid ife encode action with mark and pipe control
# ok 125 df43 - Create valid ife encode action with mark and continue control
# ok 126 e4cf - Create valid ife encode action with mark and drop control
# ok 127 ccba - Create valid ife encode action with mark and reclassify control
# ok 128 a1cf - Create valid ife encode action with mark and jump control
# ok 129 cb3d - Create valid ife encode action with mark value at 32-bit maximum
# ok 130 1efb - Create ife encode action with mark value exceeding 32-bit maximum
# ok 131 95ed - Create valid ife encode action with prio and pass control
# ok 132 aa17 - Create valid ife encode action with prio and pipe control
# ok 133 74c7 - Create valid ife encode action with prio and continue control
# ok 134 7a97 - Create valid ife encode action with prio and drop control
# ok 135 f66b - Create valid ife encode action with prio and reclassify control
# ok 136 3056 - Create valid ife encode action with prio and jump control
# ok 137 7dd3 - Create valid ife encode action with prio value at 32-bit maximum
# ok 138 2ca1 - Create ife encode action with prio value exceeding 32-bit maximum
# ok 139 05bb - Create valid ife encode action with tcindex and pass control
# ok 140 ce65 - Create valid ife encode action with tcindex and pipe control
# ok 141 09cd - Create valid ife encode action with tcindex and continue control
# ok 142 8eb5 - Create valid ife encode action with tcindex and continue control
# ok 143 451a - Create valid ife encode action with tcindex and drop control
# ok 144 d76c - Create valid ife encode action with tcindex and reclassify control
# ok 145 e731 - Create valid ife encode action with tcindex and jump control
# ok 146 b7b8 - Create valid ife encode action with tcindex value at 16-bit maximum
# ok 147 d0d8 - Create ife encode action with tcindex value exceeding 16-bit maximum
# ok 148 2a9c - Create valid ife encode action with mac src parameter
# ok 149 cf5c - Create valid ife encode action with mac dst parameter
# ok 150 2353 - Create valid ife encode action with mac src and mac dst parameters
# ok 151 552c - Create valid ife encode action with mark and type parameters
# ok 152 0421 - Create valid ife encode action with prio and type parameters
# ok 153 4017 - Create valid ife encode action with tcindex and type parameters
# ok 154 fac3 - Create valid ife encode action with index at 32-bit maximum
# ok 155 7c25 - Create valid ife decode action with pass control
# ok 156 dccb - Create valid ife decode action with pipe control
# ok 157 7bb9 - Create valid ife decode action with continue control
# ok 158 d9ad - Create valid ife decode action with drop control
# ok 159 219f - Create valid ife decode action with reclassify control
# ok 160 8f44 - Create valid ife decode action with jump control
# ok 161 56cf - Create ife encode action with index exceeding 32-bit maximum
# ok 162 ee94 - Create ife encode action with invalid control
# ok 163 b330 - Create ife encode action with cookie
# ok 164 bbc0 - Create ife encode action with invalid argument
# ok 165 d54a - Create ife encode action with invalid type argument
# ok 166 7ee0 - Create ife encode action with invalid mac src argument
# ok 167 0a7d - Create ife encode action with invalid mac dst argument
# ok 168 a0e2 - Replace ife encode action with invalid goto chain control
# ok 169 a972 - Delete ife encode action with valid index
# ok 170 1272 - Delete ife encode action with invalid index
# ok 171 5124 - Add mirred mirror to egress action
# ok 172 6fb4 - Add mirred redirect to egress action
# ok 173 ba38 - Get mirred actions
# ok 174 d7c0 - Add invalid mirred direction
# ok 175 e213 - Add invalid mirred action
# ok 176 2d89 - Add mirred action with invalid device
# ok 177 300b - Add mirred action with duplicate index
# ok 178 8917 - Add mirred mirror action with control pass
# ok 179 1054 - Add mirred mirror action with control pipe
# ok 180 9887 - Add mirred mirror action with control continue
# ok 181 e4aa - Add mirred mirror action with control reclassify
# ok 182 ece9 - Add mirred mirror action with control drop
# ok 183 0031 - Add mirred mirror action with control jump
# ok 184 407c - Add mirred mirror action with cookie
# ok 185 8b69 - Add mirred mirror action with index at 32-bit maximum
# ok 186 3f66 - Add mirred mirror action with index exceeding 32-bit maximum
# ok 187 a70e - Delete mirred mirror action
# ok 188 3fb3 - Delete mirred redirect action
# ok 189 2a9a - Replace mirred action with invalid goto chain control
# ok 190 4749 - Add batch of 32 mirred redirect egress actions with cookie
# ok 191 5c69 - Delete batch of 32 mirred redirect egress actions
# ok 192 d3c0 - Add batch of 32 mirred mirror ingress actions with cookie
# ok 193 e684 - Delete batch of 32 mirred mirror ingress actions
# ok 194 31e3 - Add mirred mirror to egress action with no_percpu flag
# ok 195 6d84 - Add csum iph action
# ok 196 1862 - Add csum ip4h action
# ok 197 15c6 - Add csum ipv4h action
# ok 198 bf47 - Add csum icmp action
# ok 199 cc1d - Add csum igmp action
# ok 200 bccc - Add csum foobar action
# ok 201 3bb4 - Add csum tcp action
# ok 202 759c - Add csum udp action
# ok 203 bdb6 - Add csum udp xor iph action
# ok 204 c220 - Add csum udplite action
# ok 205 8993 - Add csum sctp action
# ok 206 b138 - Add csum ip & icmp action
# ok 207 eeda - Add csum ip & sctp action
# ok 208 0017 - Add csum udp or tcp action
# ok 209 b10b - Add all 7 csum actions
# ok 210 ce92 - Add csum udp action with cookie
# ok 211 912f - Add csum icmp action with large cookie
# ok 212 879b - Add batch of 32 csum tcp actions
# ok 213 b4e9 - Delete batch of 32 csum actions
# ok 214 0015 - Add batch of 32 csum tcp actions with large cookies
# ok 215 989e - Delete batch of 32 csum actions with large cookies
# ok 216 d128 - Replace csum action with invalid goto chain control
# ok 217 eaf0 - Add csum iph action with no_percpu flag
# ok 218 9784 - Add valid sample action with mandatory arguments
# ok 219 5c91 - Add valid sample action with mandatory arguments and continue control action
# ok 220 334b - Add valid sample action with mandatory arguments and drop control action
# ok 221 da69 - Add valid sample action with mandatory arguments and reclassify control action
# ok 222 13ce - Add valid sample action with mandatory arguments and pipe control action
# ok 223 1886 - Add valid sample action with mandatory arguments and jump control action
# ok 224 7571 - Add sample action with invalid rate
# ok 225 b6d4 - Add sample action with mandatory arguments and invalid control action
# ok 226 a874 - Add invalid sample action without mandatory arguments
# ok 227 ac01 - Add invalid sample action without mandatory argument rate
# ok 228 4203 - Add invalid sample action without mandatory argument group
# ok 229 14a7 - Add invalid sample action without mandatory argument group
# ok 230 8f2e - Add valid sample action with trunc argument
# ok 231 45f8 - Add sample action with maximum rate argument
# ok 232 ad0c - Add sample action with maximum trunc argument
# ok 233 83a9 - Add sample action with maximum group argument
# ok 234 ed27 - Add sample action with invalid rate argument
# ok 235 2eae - Add sample action with invalid group argument
# ok 236 6ff3 - Add sample action with invalid trunc size
# ok 237 2b2a - Add sample action with invalid index
# ok 238 dee2 - Add sample action with maximum allowed index
# ok 239 560e - Add sample action with cookie
# ok 240 704a - Replace existing sample action with new rate argument
# ok 241 60eb - Replace existing sample action with new group argument
# ok 242 2cce - Replace existing sample action with new trunc argument
# ok 243 59d1 - Replace existing sample action with new control argument
# ok 244 0a6e - Replace sample action with invalid goto chain control
# ok 245 3872 - Delete sample action with valid index
# ok 246 a394 - Delete sample action with invalid index
# ok 247 6f5a - Add vlan pop action with pipe opcode
# ok 248 df35 - Add vlan pop action with pass opcode
# ok 249 b0d4 - Add vlan pop action with drop opcode
# ok 250 95ee - Add vlan pop action with reclassify opcode
# ok 251 0283 - Add vlan pop action with continue opcode
# ok 252 b6b9 - Add vlan pop action with jump opcode
# ok 253 87c3 - Add vlan pop action with trap opcode
# ok 254 a178 - Add vlan pop action with invalid opcode
# ok 255 ee6f - Add vlan pop action with index at 32-bit maximum
# ok 256 0dfa - Add vlan pop action with index exceeding 32-bit maximum
# ok 257 2b91 - Add vlan invalid action
# ok 258 57fc - Add vlan push action with invalid protocol type
# ok 259 3989 - Add vlan push action with default protocol and priority
# ok 260 79dc - Add vlan push action with protocol 802.1Q and priority 3
# ok 261 4d73 - Add vlan push action with protocol 802.1AD
# ok 262 1f4b - Add vlan push action with maximum 12-bit vlan ID
# ok 263 1f7b - Add vlan push action with invalid vlan ID
# ok 264 fe40 - Add vlan push action with maximum 3-bit IEEE 802.1p priority
# ok 265 5d02 - Add vlan push action with invalid IEEE 802.1p priority
# ok 266 ba5b - Add vlan modify action for protocol 802.1Q setting priority 0
# ok 267 6812 - Add vlan modify action for protocol 802.1Q
# ok 268 5a31 - Add vlan modify action for protocol 802.1AD
# ok 269 3deb - Replace existing vlan push action with new ID
# ok 270 9e76 - Replace existing vlan push action with new protocol
# ok 271 ede4 - Replace existing vlan push action with new priority
# ok 272 d413 - Replace existing vlan pop action with new cookie
# ok 273 83a4 - Delete vlan pop action
# ok 274 ed1e - Delete vlan push action for protocol 802.1Q
# ok 275 a2a3 - Flush vlan actions
# ok 276 1d78 - Add vlan push action with cookie
# ok 277 e394 - Replace vlan push action with invalid goto chain control
# ok 278 294e - Add batch of 32 vlan push actions with cookie
# ok 279 56f7 - Delete batch of 32 vlan push actions
# ok 280 759f - Add batch of 32 vlan pop actions with cookie
# ok 281 c84a - Delete batch of 32 vlan pop actions
# ok 282 1a3d - Add vlan pop action with no_percpu flag
# ok 283 696a - Add simple ct action
# ok 284 e38c - Add simple ct action with cookie
# ok 285 9f20 - Add ct clear action
# ok 286 0bc1 - Add ct clear action with cookie of max length
# ok 287 5bea - Try ct with zone
# ok 288 d5d6 - Try ct with zone, commit
# ok 289 029f - Try ct with zone, commit, mark
# ok 290 a58d - Try ct with zone, commit, mark, nat
# ok 291 901b - Try ct with full nat ipv4 range syntax
# ok 292 072b - Try ct with full nat ipv6 syntax
# ok 293 3420 - Try ct with full nat ipv6 range syntax
# ok 294 4470 - Try ct with full nat ipv6 range syntax + force
# ok 295 5d88 - Try ct with label
# ok 296 04d4 - Try ct with label with mask
# ok 297 9751 - Try ct with mark + mask
# ok 298 2faa - Try ct with mark + mask and cookie
# ok 299 3991 - Add simple ct action with no_percpu flag
# ok 300 3992 - Add ct action triggering DNAT tuple conflict
# ok 301 49aa - Add valid basic police action
# ok 302 3abe - Add police action with duplicate index
# ok 303 49fa - Add valid police action with mtu
# ok 304 7943 - Add valid police action with peakrate
# ok 305 055e - Add police action with peakrate and no mtu
# ok 306 f057 - Add police action with valid overhead
# ok 307 7ffb - Add police action with ethernet linklayer type
# ok 308 3dda - Add police action with atm linklayer type
# ok 309 551b - Add police actions with conform-exceed control continue/drop
# ok 310 0c70 - Add police actions with conform-exceed control pass/reclassify
# ok 311 d946 - Add police actions with conform-exceed control pass/pipe
# ok 312 ddd6 - Add police action with invalid rate value
# ok 313 f61c - Add police action with invalid burst value
# ok 314 6aaf - Add police actions with conform-exceed control pass/pipe [with numeric values]
# ok 315 29b1 - Add police actions with conform-exceed control <invalid>/drop
# ok 316 c26f - Add police action with invalid peakrate value
# ok 317 db04 - Add police action with invalid mtu value
# ok 318 f3c9 - Add police action with cookie
# ok 319 d190 - Add police action with maximum index
# ok 320 336e - Delete police action
# ok 321 77fa - Get single police action from many actions
# ok 322 aa43 - Get single police action without specifying index
# ok 323 858b - List police actions
# ok 324 1c3a - Flush police actions
# ok 325 7326 - Add police action with control continue
# ok 326 34fa - Add police action with control drop
# ok 327 8dd5 - Add police action with control ok
# ok 328 b9d1 - Add police action with control reclassify
# ok 329 c534 - Add police action with control pipe
# ok 330 b48b - Add police action with exceed goto chain control action
# ok 331 689e - Replace police action with invalid goto chain control
# ok 332 cdd7 - Add valid police action with packets per second rate limit
# ok 333 f5bc - Add invalid police action with both bps and pps
# ok 334 7d64 - Add police action with skip_hw option
# ok 335 319a - Add pedit action that mangles IP TTL
# ok 336 7e67 - Replace pedit action with invalid goto chain
# ok 337 377e - Add pedit action with RAW_OP offset u32
# ok 338 a0ca - Add pedit action with RAW_OP offset u32 (INVALID)
# ok 339 dd8a - Add pedit action with RAW_OP offset u16 u16
# ok 340 53db - Add pedit action with RAW_OP offset u16 (INVALID)
# ok 341 5c7e - Add pedit action with RAW_OP offset u8 add value
# ok 342 3a07 - Add pedit action with RAW_OP offset u8-u16-u8
# ok 343 ab0f - Add pedit action with RAW_OP offset u16-u8-u8
# ok 344 9d12 - Add pedit action with RAW_OP offset u32 set u16 clear u8 invert
# ok 345 ebfa - Add pedit action with RAW_OP offset overflow u32 (INVALID)
# ok 346 f512 - Add pedit action with RAW_OP offset u16 at offmask shift set
# ok 347 c2cb - Add pedit action with RAW_OP offset u32 retain value
# ok 348 1762 - Add pedit action with RAW_OP offset u8 clear value
# ok 349 bcee - Add pedit action with RAW_OP offset u8 retain value
# ok 350 e89f - Add pedit action with RAW_OP offset u16 retain value
# ok 351 c282 - Add pedit action with RAW_OP offset u32 clear value
# ok 352 c422 - Add pedit action with RAW_OP offset u16 invert value
# ok 353 d3d3 - Add pedit action with RAW_OP offset u32 invert value
# ok 354 57e5 - Add pedit action with RAW_OP offset u8 preserve value
# ok 355 99e0 - Add pedit action with RAW_OP offset u16 preserve value
# ok 356 1892 - Add pedit action with RAW_OP offset u32 preserve value
# ok 357 4b60 - Add pedit action with RAW_OP negative offset u16/u32 set value
# ok 358 a5a7 - Add pedit action with LAYERED_OP eth set src
# ok 359 86d4 - Add pedit action with LAYERED_OP eth set src & dst
# ok 360 f8a9 - Add pedit action with LAYERED_OP eth set dst
# ok 361 c715 - Add pedit action with LAYERED_OP eth set src (INVALID)
# ok 362 8131 - Add pedit action with LAYERED_OP eth set dst (INVALID)
# ok 363 ba22 - Add pedit action with LAYERED_OP eth type set/clear sequence
# ok 364 dec4 - Add pedit action with LAYERED_OP eth set type (INVALID)
# ok 365 ab06 - Add pedit action with LAYERED_OP eth add type
# ok 366 918d - Add pedit action with LAYERED_OP eth invert src
# ok 367 a8d4 - Add pedit action with LAYERED_OP eth invert dst
# ok 368 ee13 - Add pedit action with LAYERED_OP eth invert type
# ok 369 7588 - Add pedit action with LAYERED_OP ip set src
# ok 370 0fa7 - Add pedit action with LAYERED_OP ip set dst
# ok 371 5810 - Add pedit action with LAYERED_OP ip set src & dst
# ok 372 1092 - Add pedit action with LAYERED_OP ip set ihl & dsfield
# ok 373 02d8 - Add pedit action with LAYERED_OP ip set ttl & protocol
# ok 374 3e2d - Add pedit action with LAYERED_OP ip set ttl (INVALID)
# ok 375 31ae - Add pedit action with LAYERED_OP ip ttl clear/set
# ok 376 486f - Add pedit action with LAYERED_OP ip set duplicate fields
# ok 377 e790 - Add pedit action with LAYERED_OP ip set ce, df, mf, firstfrag, nofrag fields
# ok 378 cc8a - Add pedit action with LAYERED_OP ip set tos
# ok 379 7a17 - Add pedit action with LAYERED_OP ip set precedence
# ok 380 c3b6 - Add pedit action with LAYERED_OP ip add tos
# ok 381 43d3 - Add pedit action with LAYERED_OP ip add precedence
# ok 382 438e - Add pedit action with LAYERED_OP ip clear tos
# ok 383 6b1b - Add pedit action with LAYERED_OP ip clear precedence
# ok 384 824a - Add pedit action with LAYERED_OP ip invert tos
# ok 385 106f - Add pedit action with LAYERED_OP ip invert precedence
# ok 386 6829 - Add pedit action with LAYERED_OP beyond ip set dport & sport
# ok 387 afd8 - Add pedit action with LAYERED_OP beyond ip set icmp_type & icmp_code
# ok 388 3143 - Add pedit action with LAYERED_OP beyond ip set dport (INVALID)
# ok 389 815c - Add pedit action with LAYERED_OP ip6 set src
# ok 390 4dae - Add pedit action with LAYERED_OP ip6 set dst
# ok 391 fc1f - Add pedit action with LAYERED_OP ip6 set src & dst
# ok 392 6d34 - Add pedit action with LAYERED_OP ip6 dst retain value (INVALID)
# ok 393 94bb - Add pedit action with LAYERED_OP ip6 traffic_class
# ok 394 6f5e - Add pedit action with LAYERED_OP ip6 flow_lbl
# ok 395 1442 - Add pedit action with LAYERED_OP tcp set dport & sport
# ok 396 b7ac - Add pedit action with LAYERED_OP tcp sport set (INVALID)
# ok 397 3bc4 - Add pedit action with LAYERED_OP tcp set dport, sport & flags fields
# ok 398 f1c8 - Add pedit action with LAYERED_OP udp set dport & sport
# ok 399 d784 - Add pedit action with mixed RAW/LAYERED_OP #1
# ok 400 70ca - Add pedit action with mixed RAW/LAYERED_OP #2
# ok 401 6236 - Add skbedit action with valid mark
# ok 402 c8cf - Add skbedit action with 32-bit maximum mark
# ok 403 407b - Add skbedit action with mark exceeding 32-bit maximum
# ok 404 d4cd - Add skbedit action with valid mark and mask
# ok 405 baa7 - Add skbedit action with valid mark and 32-bit maximum mask
# ok 406 62a5 - Add skbedit action with valid mark and mask exceeding 32-bit maximum
# ok 407 bc15 - Add skbedit action with valid mark and mask with invalid format
# ok 408 57c2 - Replace skbedit action with new mask
# ok 409 081d - Add skbedit action with priority
# ok 410 cc37 - Add skbedit action with invalid priority
# ok 411 3c95 - Add skbedit action with queue_mapping
# ok 412 985c - Add skbedit action with queue_mapping exceeding 16-bit maximum
# ok 413 224f - Add skbedit action with ptype host
# ok 414 d1a3 - Add skbedit action with ptype otherhost
# ok 415 b9c6 - Add skbedit action with invalid ptype
# ok 416 464a - Add skbedit action with control pipe
# ok 417 212f - Add skbedit action with control reclassify
# ok 418 0651 - Add skbedit action with control pass
# ok 419 cc53 - Add skbedit action with control drop
# ok 420 ec16 - Add skbedit action with control jump
# ok 421 db54 - Add skbedit action with control continue
# ok 422 1055 - Add skbedit action with cookie
# ok 423 5172 - List skbedit actions
# ok 424 a6d6 - Add skbedit action with index at 32-bit maximum
# ok 425 f0f4 - Add skbedit action with index exceeding 32-bit maximum
# ok 426 38f3 - Delete skbedit action
# ok 427 ce97 - Flush skbedit actions
# ok 428 1b2b - Replace skbedit action with invalid goto_chain control
# ok 429 630c - Add batch of 32 skbedit actions with all parameters and cookie
# ok 430 706d - Delete batch of 32 skbedit actions with all parameters
# ok 431 5153 - Add gate action with priority and sched-entry
# ok 432 7189 - Add gate action with base-time
# ok 433 a721 - Add gate action with cycle-time
# ok 434 c029 - Add gate action with cycle-time-ext
# ok 435 3719 - Replace gate base-time action
# ok 436 d821 - Delete gate action with valid index
# ok 437 3128 - Delete gate action with invalid index
# ok 438 7837 - List gate actions
# ok 439 9273 - Flush gate actions
# ok 440 c829 - Add gate action with duplicate index
# ok 441 3043 - Add gate action with invalid index
# ok 442 2930 - Add gate action with cookie
# ok 443 e89a - Add valid pass action
# ok 444 a02c - Add valid pipe action
# ok 445 feef - Add valid reclassify action
# ok 446 8a7a - Add valid drop action
# ok 447 9a52 - Add valid continue action
# ok 448 d700 - Add invalid action
# ok 449 9215 - Add action with duplicate index
# ok 450 798e - Add action with index exceeding 32-bit maximum
# ok 451 22be - Add action with index at 32-bit maximum
# ok 452 ac2a - List actions
# ok 453 3edf - Flush gact actions
# ok 454 63ec - Delete pass action
# ok 455 46be - Delete pipe action
# ok 456 2e08 - Delete reclassify action
# ok 457 99c4 - Delete drop action
# ok 458 fb6b - Delete continue action
# ok 459 0eb3 - Delete non-existent action
# ok 460 f02c - Replace gact action
# ok 461 525f - Get gact action by index
# ok 462 1021 - Add batch of 32 gact pass actions
# ok 463 da7a - Add batch of 32 gact continue actions with cookie
# ok 464 8aa3 - Delete batch of 32 gact continue actions
# ok 465 8e47 - Add gact action with random determ goto chain control action
# ok 466 ca89 - Replace gact action with invalid goto chain control
# ok 467 95ad - Add gact pass action with no_percpu flag
# ok 468 7f52 - Try to flush action which is referenced by filter
# ok 469 ae1e - Try to flush actions when last one is referenced by filter
# ok 470 7565 - Add nat action on ingress with default control action
# ok 471 fd79 - Add nat action on ingress with pipe control action
# ok 472 eab9 - Add nat action on ingress with continue control action
# ok 473 c53a - Add nat action on ingress with reclassify control action
# ok 474 76c9 - Add nat action on ingress with jump control action
# ok 475 24c6 - Add nat action on ingress with drop control action
# ok 476 2120 - Add nat action on ingress with maximum index value
# ok 477 3e9d - Add nat action on ingress with invalid index value
# ok 478 f6c9 - Add nat action on ingress with invalid IP address
# ok 479 be25 - Add nat action on ingress with invalid argument
# ok 480 a7bd - Add nat action on ingress with DEFAULT IP address
# ok 481 ee1e - Add nat action on ingress with ANY IP address
# ok 482 1de8 - Add nat action on ingress with ALL IP address
# ok 483 8dba - Add nat action on egress with default control action
# ok 484 19a7 - Add nat action on egress with pipe control action
# ok 485 f1d9 - Add nat action on egress with continue control action
# ok 486 6d4a - Add nat action on egress with reclassify control action
# ok 487 b313 - Add nat action on egress with jump control action
# ok 488 d9fc - Add nat action on egress with drop control action
# ok 489 a895 - Add nat action on egress with DEFAULT IP address
# ok 490 2572 - Add nat action on egress with ANY IP address
# ok 491 37f3 - Add nat action on egress with ALL IP address
# ok 492 6054 - Add nat action on egress with cookie
# ok 493 79d6 - Add nat action on ingress with cookie
# ok 494 4b12 - Replace nat action with invalid goto chain control
# ok 495 b811 - Delete nat action with valid index
# ok 496 a521 - Delete nat action with invalid index
# ok 497 2b11 - Add tunnel_key set action with mandatory parameters
# ok 498 dc6b - Add tunnel_key set action with missing mandatory src_ip parameter
# ok 499 7f25 - Add tunnel_key set action with missing mandatory dst_ip parameter
# ok 500 a5e0 - Add tunnel_key set action with invalid src_ip parameter
# ok 501 eaa8 - Add tunnel_key set action with invalid dst_ip parameter
# ok 502 3b09 - Add tunnel_key set action with invalid id parameter
# ok 503 9625 - Add tunnel_key set action with invalid dst_port parameter
# ok 504 05af - Add tunnel_key set action with optional dst_port parameter
# ok 505 da80 - Add tunnel_key set action with index at 32-bit maximum
# ok 506 d407 - Add tunnel_key set action with index exceeding 32-bit maximum
# ok 507 5cba - Add tunnel_key set action with id value at 32-bit maximum
# ok 508 e84a - Add tunnel_key set action with id value exceeding 32-bit maximum
# ok 509 9c19 - Add tunnel_key set action with dst_port value at 16-bit maximum
# ok 510 3bd9 - Add tunnel_key set action with dst_port value exceeding 16-bit maximum
# ok 511 68e2 - Add tunnel_key unset action
# ok 512 6192 - Add tunnel_key unset continue action
# ok 513 061d - Add tunnel_key set continue action with cookie
# ok 514 8acb - Add tunnel_key set continue action with invalid cookie
# ok 515 a07e - Add tunnel_key action with no set/unset command specified
# ok 516 b227 - Add tunnel_key action with csum option
# ok 517 58a7 - Add tunnel_key action with nocsum option
# ok 518 2575 - Add tunnel_key action with not-supported parameter
# ok 519 7a88 - Add tunnel_key action with cookie parameter
# ok 520 4f20 - Add tunnel_key action with a single geneve option parameter
# ok 521 e33d - Add tunnel_key action with multiple geneve options parameter
# ok 522 0778 - Add tunnel_key action with invalid class geneve option parameter
# ok 523 4ae8 - Add tunnel_key action with invalid type geneve option parameter
# ok 524 4039 - Add tunnel_key action with short data length geneve option parameter
# ok 525 26a6 - Add tunnel_key action with non-multiple of 4 data length geneve option parameter
# ok 526 f44d - Add tunnel_key action with incomplete geneve options parameter
# ok 527 7afc - Replace tunnel_key set action with all parameters
# ok 528 364d - Replace tunnel_key set action with all parameters and cookie
# ok 529 937c - Fetch all existing tunnel_key actions
# ok 530 6783 - Flush all existing tunnel_key actions
# ok 531 8242 - Replace tunnel_key set action with invalid goto chain
# ok 532 0cd2 - Add tunnel_key set action with no_percpu flag
# ok 533 3671 - Delete tunnel_key set action with valid index
# ok 534 8597 - Delete tunnel_key set action with invalid index
# ok 535 6bda - Add tunnel_key action with nofrag option # skipped - probe command: test skipped.
# 
# 
# 
# 
# 
# Traceback (most recent call last):
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 1028, in <module>
#     main()
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 1022, in main
#     set_operation_mode(pm, parser, args, remaining)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 986, in set_operation_mode
#     with open(fname, 'w') as fh:
#          ^^^^^^^^^^^^^^^^
# OSError: [Errno 30] Read-only file system: 'test-results.tap'
# considering category qdisc
#  -- ns/SubPlugin.__init__
#  -- scapy/SubPlugin.__init__
# Executing 294 tests in parallel and 33 in serial
# Using 11 batches and 4 workers
[  318.566418] tc[3735]: segfault at 0 ip 00007fb5b42a3ce3 sp 00007ffd4a0ffe90 error 4 in ld-musl-x86_64.so.1[7fb5b4264000+54000] likely on CPU 12 (core 12, socket 0)
[  318.568267] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  345.567384] tc[4149]: segfault at 0 ip 00007fd699962ce3 sp 00007ffde0c1a170 error 4 in ld-musl-x86_64.so.1[7fd699923000+54000] likely on CPU 53 (core 53, socket 0)
[  345.568982] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  346.757563] tc[4166]: segfault at 0 ip 00007f05597f8ce3 sp 00007ffde65c8570 error 4 in ld-musl-x86_64.so.1[7f05597b9000+54000] likely on CPU 52 (core 52, socket 0)
[  346.759710] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  347.685654] tc[4181]: segfault at 0 ip 00007f85e394dce3 sp 00007ffdf1cbd7a0 error 4 in ld-musl-x86_64.so.1[7f85e390e000+54000] likely on CPU 52 (core 52, socket 0)
[  347.686697] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  348.564114] tc[4193]: segfault at 0 ip 00007f98d5b88ce3 sp 00007ffce1078760 error 4 in ld-musl-x86_64.so.1[7f98d5b49000+54000] likely on CPU 14 (core 14, socket 0)
[  348.565378] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  349.209816] tc[4202]: segfault at 0 ip 00007f0320886ce3 sp 00007ffe4f022510 error 4 in ld-musl-x86_64.so.1[7f0320847000+54000] likely on CPU 46 (core 46, socket 0)
[  349.212316] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  350.214326] tc[4211]: segfault at 0 ip 00007f5244d7fce3 sp 00007ffda9ae0ca0 error 4 in ld-musl-x86_64.so.1[7f5244d40000+54000] likely on CPU 10 (core 10, socket 0)
[  350.216162] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  350.360326] tc[4213]: segfault at 0 ip 00007f3b7a3afce3 sp 00007fffe745cec0 error 4 in ld-musl-x86_64.so.1[7f3b7a370000+54000] likely on CPU 19 (core 19, socket 0)
[  350.362133] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  351.297882] tc[4226]: segfault at 0 ip 00007f9e15e28ce3 sp 00007ffcdf81fd40 error 4 in ld-musl-x86_64.so.1[7f9e15de9000+54000] likely on CPU 38 (core 38, socket 0)
[  351.299577] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  352.596150] tc[4242]: segfault at 0 ip 00007f49782dcce3 sp 00007ffe8f29fe40 error 4 in ld-musl-x86_64.so.1[7f497829d000+54000] likely on CPU 39 (core 39, socket 0)
[  352.597525] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  353.467518] tc[4249]: segfault at 0 ip 00007f72f5e8bce3 sp 00007ffef47db780 error 4 in ld-musl-x86_64.so.1[7f72f5e4c000+54000] likely on CPU 46 (core 46, socket 0)
[  353.468955] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  353.732088] tc[4256]: segfault at 0 ip 00007fe2d70acce3 sp 00007ffe2e84ce00 error 4 in ld-musl-x86_64.so.1[7fe2d706d000+54000] likely on CPU 1 (core 1, socket 0)
[  353.732830] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  354.980485] tc[4270]: segfault at 0 ip 00007f1df9849ce3 sp 00007ffdc27d1310 error 4 in ld-musl-x86_64.so.1[7f1df980a000+54000] likely on CPU 37 (core 37, socket 0)
[  354.981578] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  355.295042] tc[4275]: segfault at 0 ip 00007fce182bece3 sp 00007ffe66e8f8d0 error 4 in ld-musl-x86_64.so.1[7fce1827f000+54000] likely on CPU 46 (core 46, socket 0)
[  355.296542] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  363.691659] netem: version 1.3
# 
# -----> prepare stage *** Could not execute: "./scripts/taprio_wait_for_admin.sh $TC $ETH"
# 
# -----> prepare stage *** Error message: "Command "/sbin/ip netns exec tcut-3918603469 ./scripts/taprio_wait_for_admin.sh /sbin/tc eth0" timed out
# "
# 
# -----> prepare stage *** Aborting test run.
# 
# 
# <_io.BufferedReader name=6> *** stdout ***
# 
# 
# <_io.BufferedReader name=15> *** stderr ***
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 536, in test_runner
#     res = run_one_test(pm, args, index, tidx)
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[  370.036835] tc[4444]: segfault at 0 ip 00007fdcb0b5dce3 sp 00007fffe052d060 error 4 in ld-musl-x86_64.so.1[7fdcb0b1e000+54000] likely on CPU 20 (core 20, socket 0)

#  [  370.039064] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
 File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 420, in run_one_test
#     prepare_env(tidx, args, pm, 'setup', "-----> prepare stage", tidx["setup"])
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 268, in prepare_env
#     raise PluginMgrTestFail(
[  386.597978] tc[4634]: segfault at 0 ip 00007f5d9f901ce3 sp 00007ffec557eb70 error 4 in ld-musl-x86_64.so.1[7f5d9f8c2000+54000] likely on CPU 18 (core 18, socket 0)
[  386.599107] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  387.811892] tc[4648]: segfault at 0 ip 00007fa6573a7ce3 sp 00007ffc85bab540 error 4 in ld-musl-x86_64.so.1[7fa657368000+54000] likely on CPU 18 (core 18, socket 0)
[  387.813445] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  388.155623] sch_tbf: burst 1500 is lower than device dummy1id6430 mtu (1514) !
[  388.682782] tc[4659]: segfault at 0 ip 00007f7057ecace3 sp 00007ffe74790540 error 4 in ld-musl-x86_64.so.1[7f7057e8b000+54000] likely on CPU 18 (core 18, socket 0)
[  388.684132] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  389.029308] sch_tbf: burst 1500 is lower than device dummy1id0518 mtu (1514) !
[  389.640017] tc[4675]: segfault at 0 ip 00007fa89ecdbce3 sp 00007fff2dc51470 error 4 in ld-musl-x86_64.so.1[7fa89ec9c000+54000] likely on CPU 17 (core 17, socket 0)
[  389.641652] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  390.212416] sch_tbf: burst 1500 is lower than device dummy1id320a mtu (1514) !
[  390.584643] tc[4692]: segfault at 0 ip 00007fb71988ece3 sp 00007fff211d96c0 error 4 in ld-musl-x86_64.so.1[7fb71984f000+54000] likely on CPU 18 (core 18, socket 0)
[  390.587026] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  391.959434] sch_tbf: burst 1500 is lower than device dummy1id239b mtu (1514) !
[  391.972057] tc[4708]: segfault at 0 ip 00007f9ce6afbce3 sp 00007ffc89e74a10 error 4 in ld-musl-x86_64.so.1[7f9ce6abc000+54000] likely on CPU 20 (core 20, socket 0)
[  391.973659] Code: 89 eb 48 85 c0 74 05 f6 00 20 74 32 85 ed 74 54 49 89 df b8 ff ff ff 7f 44 29 f0 44 39 d8 0f 8c 8a 08 00 00 41 b8 ff ff ff 7f <41> 0f b6 07 45 01 de 84 c0 0f 84 96 0b 00 00 4c 89 fd eb 85 48 63
[  392.866390] sch_tbf: burst 1500 is lower than device dummy1idc975 mtu (1514) !
[  394.628974] sch_tbf: burst 1500 is lower than device dummy1id948c mtu (1514) !
[  395.814677] sch_tbf: burst 1500 is lower than device dummy1id3549 mtu (1514) !
[  396.153103] sch_tbf: burst 1500 is lower than device dummy1id3549 mtu (1514) !
[  397.603437] sch_tbf: burst 1500 is lower than device dummy1idf948 mtu (1514) !
[  398.228997] sch_tbf: burst 1500 is lower than device dummy1idf948 mtu (1514) !
[  399.714463] sch_tbf: burst 1500 is lower than device dummy1id2348 mtu (1514) !
# Test ce7d: Add mq Qdisc to multi-queue device (4 queues)
# Test 2f82: Add mq Qdisc to multi-queue device (256 queues)
# Test c525: Add duplicate mq Qdisc
# Test 128a: Delete nonexistent mq Qdisc
# Test 03a9: Delete mq Qdisc twice
# Test be0f: Add mq Qdisc to single-queue device
# Test 1023: Show mq class
# Test 0531: Replace mq with invalid parent ID
# Test 84a0: Create TEQL with default setting
# Test 7734: Create TEQL with multiple device
# Test 34a9: Delete TEQL with valid handle
# Test 6289: Show TEQL stats
# Test ba39: Add taprio Qdisc to multi-queue device (8 queues)
# Test 9462: Add taprio Qdisc with multiple sched-entry
# Test 8d92: Add taprio Qdisc with txtime-delay
# Test d092: Delete taprio Qdisc with valid handle
# Test 8471: Show taprio class
# Test 0a85: Add taprio Qdisc to single-queue device
# Test 3e1e: Add taprio Qdisc with an invalid cycle-time
# Test 39b4: Reject grafting taprio as child qdisc of software taprio
# returncode 255; expected [0]
# "-----> prepare stage" did not complete successfully
# Exception <class '__main__.PluginMgrTestFail'> ('setup', None, '"-----> prepare stage" did not complete successfully') (caught in test_runner, running test 21 39b4 Reject grafting taprio as child qdisc of software taprio stage setup)
# ---------------
# traceback
# ---------------
# ---------------
# Test 1f91: Add prio qdisc on egress with 4 bands and priomap's values exceeding bands number
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test ddfa: QFQ with small MTU
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test 671a: Add ETS qdisc with more bands than strict + quanta
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test e7f2: Sole zero element in quanta
# exception (34, 'Result not representable') in call to pre_case for <class 'plugin-lib.nsPlugin.SubPlugin'> plugin
# Test 0289: Create HFSC with class sc and ul rate setting
# Test 846a: Create HFSC with class sc umax and dmax setting
# Test 5413: Create HFSC with class rt and ls rate setting
# Test 9312: Create HFSC with class rt umax and dmax setting
# Test 6931: Delete HFSC with handle
# Test 8436: Show HFSC class
# Test bef4: HFSC rt inner class upgrade to sc
# Test 983b: Create FQ with default setting
# Test 38a1: Create FQ with limit packet setting
# Test 0a18: Create FQ with flow_limit setting
# Test 2390: Create FQ with quantum setting
# Test 845b: Create FQ with initial_quantum setting
# Test 10f7: Create FQ with invalid initial_quantum setting
# Test 9398: Create FQ with maxrate setting
# Test 342c: Create FQ with nopacing setting
# Test 6391: Create FQ with refill_delay setting
# Test 238b: Create FQ with low_rate_threshold setting
# Test 7582: Create FQ with orphan_mask setting
# Test 4894: Create FQ with timer_slack setting
# Test 324c: Create FQ with ce_threshold setting
# Test 424a: Create FQ with horizon time setting
# Test 89e1: Create FQ with horizon_cap setting
# Test 32e1: Delete FQ with valid handle
# Test 49b0: Replace FQ with limit setting
# Test 9478: Change FQ with limit setting
# Test 8b6e: Create RED with no flags
# Test 342e: Create RED with adaptive flag
# Test 2d4b: Create RED with ECN flag
# Test 650f: Create RED with flags ECN, adaptive
# Test 5f15: Create RED with flags ECN, harddrop
# Test 53e8: Create RED with flags ECN, nodrop
# Test d091: Fail to create RED with only nodrop flag
# Test 303a: Delete HTB with handle
# Test 7482: Create SFQ with default setting
# Test c186: Create SFQ with limit setting
# Test ae23: Create SFQ with perturb setting
# Test a430: Create SFQ with quantum setting
# Test 4539: Create SFQ with divisor setting
# Test b089: Create SFQ with flows setting
# Test 99a0: Create SFQ with depth setting
# Test 7389: Create SFQ with headdrop setting
# Test 6472: Create SFQ with redflowlimit setting
# Test 8929: Show SFQ class
# Test 4812: Create HHF with default setting
# Test 8a92: Create HHF with limit setting
# Test 3491: Create HHF with quantum setting
# Test ba04: Create HHF with reset_timeout setting
# Test 4238: Create HHF with admit_bytes setting
# Test 839f: Create HHF with evict_timeout setting
# Test a044: Create HHF with non_hh_weight setting
# Test 32f9: Change HHF with limit setting
# Test 385e: Show HHF class
# Test 8942: Create GRED with default setting
# Test 5783: Create GRED with grio setting
# Test 8a09: Create GRED with limit setting
# Test 48ca: Create GRED with ecn setting
# Test 48cb: Create GRED with harddrop setting
# Test 763a: Change GRED setting
# Test 8309: Show GRED class
# Test 3289: Create PLUG with default setting
# Test 0917: Create PLUG with block setting
# Test 483b: Create PLUG with release setting
# Test 4995: Create PLUG with release_indefinite setting
# Test 389c: Create PLUG with limit setting
# Test af8e: Create RED with flags ECN, nodrop, harddrop
# Test 290a: Show RED class
# Test 0385: Create DRR with default setting
# Test 2375: Delete DRR with handle
# Test 3092: Show DRR class
# Test 1820: Create CBS with default setting
# Test 1532: Create CBS with hicredit setting
# Test 2078: Create CBS with locredit setting
# Test 9271: Create CBS with sendslope setting
# Test 0482: Create CBS with idleslope setting
# Test e8f3: Create CBS with multiple setting
# Test 23c9: Replace CBS with sendslope setting
# Test a07a: Change CBS with idleslope setting
# Test 43b3: Delete CBS with handle
# Test 9472: Show CBS class
# Test 9872: Add ingress qdisc
# Test 5c5e: Add ingress qdisc with unsupported argument
# Test 74f6: Add duplicate ingress qdisc
# Test f769: Delete nonexistent ingress qdisc
# Test 3b88: Delete ingress qdisc twice
# Test 0521: Show ingress class
# Test 0904: Create HTB with default setting
# Test 3906: Create HTB with default-N setting
# Test 8492: Create HTB with r2q setting
# Test 9502: Create HTB with direct_qlen setting
# Test b924: Create HTB with class rate and burst setting
# Test 4359: Create HTB with class mpu setting
# Test 9048: Create HTB with class prio setting
# Test 4994: Create HTB with class ceil setting
# Test 9523: Create HTB with class cburst setting
# Test 5353: Create HTB with class mtu setting
# Test 346a: Create HTB with class quantum setting
# Test 238a: Create CODEL with ecn setting
# Test 939c: Create CODEL with ce_threshold setting
# Test 8380: Delete CODEL with valid handle
# Test 289c: Replace CODEL with limit setting
# Test 0648: Change CODEL with limit setting
# Test 1212: Create CAKE with default setting
# Test 3281: Create CAKE with bandwidth limit
# Test c940: Create CAKE with autorate-ingress flag
# Test 2310: Create CAKE with rtt time
# Test 2385: Create CAKE with besteffort flag
# Test a032: Create CAKE with diffserv8 flag
# Test 2349: Create CAKE with diffserv4 flag
# Test 8472: Create CAKE with flowblind flag
# Test 2341: Create CAKE with dsthost and nat flag
# Test 5134: Create CAKE with wash flag
# Test 2302: Create CAKE with flowblind and no-split-gso flag
# Test 0768: Create CAKE with dual-srchost and ack-filter flag
# Test 0238: Create CAKE with dual-dsthost and ack-filter-aggressive flag
# Test 6572: Create CAKE with memlimit and ptm flag
# Test 2436: Create CAKE with fwmark and atm flag
# Test 3984: Create CAKE with overhead and mpu
# Test 5421: Create CAKE with conservative and ingress flag
# Test 6854: Delete CAKE with conservative and ingress flag
# Test 2342: Replace CAKE with mpu
# Test 2313: Change CAKE with mpu
# Test 4365: Show CAKE class
# Test ddd9: Add prio qdisc on egress
# Test aa71: Add prio qdisc on egress with handle of maximum value
# Test db37: Add prio qdisc on egress with invalid handle exceeding maximum value
# Test 39d8: Add prio qdisc on egress with unsupported argument
# Test 5769: Add prio qdisc on egress with 4 bands and new priomap
# Test fe0f: Add prio qdisc on egress with 4 bands and priomap exceeding TC_PRIO_MAX entries
# Test 4957: Create FQ_CODEL with default setting
# Test 7621: Create FQ_CODEL with limit setting
# Test 6871: Create FQ_CODEL with memory_limit setting
# Test 5636: Create FQ_CODEL with target setting
# Test 630a: Create FQ_CODEL with interval setting
# Test 4324: Create FQ_CODEL with quantum setting
# Test b190: Create FQ_CODEL with noecn flag
# Test 5381: Create FQ_CODEL with ce_threshold setting
# Test c9d2: Create FQ_CODEL with drop_batch setting
# Test 523b: Create FQ_CODEL with multiple setting
# Test 9283: Replace FQ_CODEL with noecn setting
# Test 3459: Change FQ_CODEL with limit setting
# Test 0128: Delete FQ_CODEL with handle
# Test 0435: Show FQ_CODEL class
# Test 34ba: Create ETF with default setting
# Test 438f: Create ETF with delta nanos setting
# Test 9041: Create ETF with deadline_mode setting
# Test 9a0c: Create ETF with skip_sock_check setting
# Test 2093: Delete ETF with valid handle
# Test 283e: Create skbprio with default setting
# Test c086: Create skbprio with limit setting
# Test 6733: Change skbprio with limit setting
# Test 2958: Show skbprio class
# Test 8937: Create CHOKE with default setting
# Test 48c0: Create CHOKE with min packet setting
# Test 38c1: Create CHOKE with max packet setting
# Test 234a: Create CHOKE with ecn setting
# Test 4380: Create CHOKE with burst setting
# Test 48c7: Delete CHOKE with valid handle
# Test 4398: Replace CHOKE with min setting
# Test 0301: Change CHOKE with limit setting
# Test 3254: Create HFSC with default setting
# Test 384a: Delete PLUG with valid handle
# Test 439a: Replace PLUG with limit setting
# Test 9831: Change PLUG with limit setting
# Test cb28: Create NETEM with default setting
# Test a089: Create NETEM with limit flag
# Test 3449: Create NETEM with delay time
# Test 3782: Create NETEM with distribution and corrupt flag
# Test 2b82: Create NETEM with distribution and duplicate flag
# Test a932: Create NETEM with distribution and loss flag
# Test e01a: Create NETEM with distribution and loss state flag
# Test ba29: Create NETEM with loss gemodel flag
# Test 0492: Create NETEM with reorder flag
# Test 7862: Create NETEM with rate limit
# Test 7235: Create NETEM with multiple slot rate
# Test 5439: Create NETEM with multiple slot setting
# Test 5029: Change NETEM with loss state
# Test 3785: Replace NETEM with delay time
# Test 4502: Delete NETEM with handle
# Test 0785: Show NETEM class
# Test 6430: Create TBF with default setting
# Test 0518: Create TBF with mtu setting
# Test 320a: Create TBF with peakrate setting
# Test 239b: Create TBF with latency setting
# Test c975: Create TBF with overhead setting
# Test 948c: Create TBF with linklayer setting
# Test 3549: Replace TBF with mtu
# Test f948: Change TBF with latency time
# Test 2348: Show TBF class
# Test 983a: Create CODEL with default setting
# Test 38aa: Create CODEL with limit packet setting
# Test 9178: Create CODEL with target setting
# Test 78d1: Create CODEL with interval setting
# multiprocessing.pool.RemoteTraceback: 
# """
# Traceback (most recent call last):
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 142, in call_pre_case
#     pgn_inst.pre_case(caseinfo, test_skip)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py", line 63, in pre_case
#     self.prepare_test(test)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py", line 36, in prepare_test
#     self._nl_ns_create()
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/plugin-lib/nsPlugin.py", line 130, in _nl_ns_create
#     ip.link('add', ifname=dev1, kind='veth', peer={'ifname': dev0, 'net_ns_fd':'/proc/1/ns/net'})
#   File "/usr/lib/python3.11/site-packages/pyroute2/iproute/linux.py", line 1672, in link
#     ret = self.nlm_request(msg, msg_type=msg_type, msg_flags=msg_flags)
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 870, in nlm_request
#     return tuple(self._genlm_request(*argv, **kwarg))
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 1214, in nlm_request
#     for msg in self.get(
#                ^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 873, in get
#     return tuple(self._genlm_get(*argv, **kwarg))
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/site-packages/pyroute2/netlink/nlsocket.py", line 550, in get
#     raise msg['header']['error']
# pyroute2.netlink.exceptions.NetlinkError: (34, 'Result not representable')
# 
# During handling of the above exception, another exception occurred:
# 
# Traceback (most recent call last):
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 125, in worker
#     result = (True, func(*args, **kwds))
#                     ^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 48, in mapstar
#     return list(map(*args))
#            ^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 602, in __mp_runner
#     (_, tsr) = test_runner(mp_pm, mp_args, tests)
#                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 536, in test_runner
#     res = run_one_test(pm, args, index, tidx)
#           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 419, in run_one_test
#     pm.call_pre_case(tidx)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 146, in call_pre_case
#     print('test_ordinal is {}'.format(test_ordinal))
#                                       ^^^^^^^^^^^^
# NameError: name 'test_ordinal' is not defined
# """
# 
# The above exception was the direct cause of the following exception:
# 
# Traceback (most recent call last):
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 1028, in <module>
#     main()
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 1022, in main
#     set_operation_mode(pm, parser, args, remaining)
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 964, in set_operation_mode
#     catresults = test_runner_mp(pm, args, alltests)
#                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/nipa-data/kernel/tools/testing/selftests/tc-testing/./tdc.py", line 624, in test_runner_mp
#     pres = p.map(__mp_runner, batches)
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 367, in map
#     return self._map_async(func, iterable, mapstar, chunksize).get()
#            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#   File "/usr/lib/python3.11/multiprocessing/pool.py", line 774, in get
#     raise self._value
# NameError: name 'test_ordinal' is not defined
not ok 1 selftests: tc-testing: tdc.sh # exit=1